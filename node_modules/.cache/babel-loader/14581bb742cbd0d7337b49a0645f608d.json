{"ast":null,"code":"import _objectSpread from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): toast.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\nimport $ from 'jquery';\nimport Util from './util';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nvar NAME = 'toast';\nvar VERSION = '4.3.1';\nvar DATA_KEY = 'bs.toast';\nvar EVENT_KEY = \".\".concat(DATA_KEY);\nvar JQUERY_NO_CONFLICT = $.fn[NAME];\nvar Event = {\n  CLICK_DISMISS: \"click.dismiss\".concat(EVENT_KEY),\n  HIDE: \"hide\".concat(EVENT_KEY),\n  HIDDEN: \"hidden\".concat(EVENT_KEY),\n  SHOW: \"show\".concat(EVENT_KEY),\n  SHOWN: \"shown\".concat(EVENT_KEY)\n};\nvar ClassName = {\n  FADE: 'fade',\n  HIDE: 'hide',\n  SHOW: 'show',\n  SHOWING: 'showing'\n};\nvar DefaultType = {\n  animation: 'boolean',\n  autohide: 'boolean',\n  delay: 'number'\n};\nvar Default = {\n  animation: true,\n  autohide: true,\n  delay: 500\n};\nvar Selector = {\n  DATA_DISMISS: '[data-dismiss=\"toast\"]'\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n};\n\nvar Toast =\n/*#__PURE__*/\nfunction () {\n  function Toast(element, config) {\n    _classCallCheck(this, Toast);\n\n    this._element = element;\n    this._config = this._getConfig(config);\n    this._timeout = null;\n\n    this._setListeners();\n  } // Getters\n\n\n  _createClass(Toast, [{\n    key: \"show\",\n    // Public\n    value: function show() {\n      var _this = this;\n\n      $(this._element).trigger(Event.SHOW);\n\n      if (this._config.animation) {\n        this._element.classList.add(ClassName.FADE);\n      }\n\n      var complete = function complete() {\n        _this._element.classList.remove(ClassName.SHOWING);\n\n        _this._element.classList.add(ClassName.SHOW);\n\n        $(_this._element).trigger(Event.SHOWN);\n\n        if (_this._config.autohide) {\n          _this.hide();\n        }\n      };\n\n      this._element.classList.remove(ClassName.HIDE);\n\n      this._element.classList.add(ClassName.SHOWING);\n\n      if (this._config.animation) {\n        var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n      } else {\n        complete();\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(withoutTimeout) {\n      var _this2 = this;\n\n      if (!this._element.classList.contains(ClassName.SHOW)) {\n        return;\n      }\n\n      $(this._element).trigger(Event.HIDE);\n\n      if (withoutTimeout) {\n        this._close();\n      } else {\n        this._timeout = setTimeout(function () {\n          _this2._close();\n        }, this._config.delay);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      clearTimeout(this._timeout);\n      this._timeout = null;\n\n      if (this._element.classList.contains(ClassName.SHOW)) {\n        this._element.classList.remove(ClassName.SHOW);\n      }\n\n      $(this._element).off(Event.CLICK_DISMISS);\n      $.removeData(this._element, DATA_KEY);\n      this._element = null;\n      this._config = null;\n    } // Private\n\n  }, {\n    key: \"_getConfig\",\n    value: function _getConfig(config) {\n      config = _objectSpread({}, Default, $(this._element).data(), typeof config === 'object' && config ? config : {});\n      Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n      return config;\n    }\n  }, {\n    key: \"_setListeners\",\n    value: function _setListeners() {\n      var _this3 = this;\n\n      $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function () {\n        return _this3.hide(true);\n      });\n    }\n  }, {\n    key: \"_close\",\n    value: function _close() {\n      var _this4 = this;\n\n      var complete = function complete() {\n        _this4._element.classList.add(ClassName.HIDE);\n\n        $(_this4._element).trigger(Event.HIDDEN);\n      };\n\n      this._element.classList.remove(ClassName.SHOW);\n\n      if (this._config.animation) {\n        var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n      } else {\n        complete();\n      }\n    } // Static\n\n  }], [{\n    key: \"_jQueryInterface\",\n    value: function _jQueryInterface(config) {\n      return this.each(function () {\n        var $element = $(this);\n        var data = $element.data(DATA_KEY);\n\n        var _config = typeof config === 'object' && config;\n\n        if (!data) {\n          data = new Toast(this, _config);\n          $element.data(DATA_KEY, data);\n        }\n\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n\n          data[config](this);\n        }\n      });\n    }\n  }, {\n    key: \"VERSION\",\n    get: function get() {\n      return VERSION;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return DefaultType;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Default;\n    }\n  }]);\n\n  return Toast;\n}();\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n\n$.fn[NAME] = Toast._jQueryInterface;\n$.fn[NAME].Constructor = Toast;\n\n$.fn[NAME].noConflict = function () {\n  $.fn[NAME] = JQUERY_NO_CONFLICT;\n  return Toast._jQueryInterface;\n};\n\nexport default Toast;","map":null,"metadata":{},"sourceType":"module"}