{"ast":null,"code":"import _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/chat/Chat.js\";\n// import React, { Component } from 'react';\n// import { withAuthConsumer } from '../../contexts/AuthStore';\n// import classroomService from '../../services/classroom-service';\n// import { Link, NavLink } from 'react-router-dom';\n// class Chat extends Component {\n//   state = {\n//     students: this.props.classroom.students,\n//     messages:[],\n//     show: false\n//   }\n//   fetchClassrooms = () => {\n//   }\n//   componentDidMount(){\n//   }\n//   handleShow = () => {\n//     this.setState({ show: true });\n//   }\n//   render() {\n//     return(\n//       <div>\n//         <div className=\"classroom\" hidden={this.state.show}>\n//           {this.state.students.map(student => (\n//             <Link \n//               className=\"btn inbox-btn\" \n//               key={student.id} \n//               to=\"/conversation\"\n//               student={student.id}\n//               onClick={this.handleShow}\n//             >\n//             <div className=\"d-flex flex-row align-items-center\">\n//               <img className=\"inbox-btn-img\" src={student.imageURL} alt=\"student-avatar\"/>\n//               <p className=\"mb-0 ml-3\">{student.name} {student.surname}</p>\n//             </div>\n//             <div>\n//             </div>  \n//             </Link>\n//           ))}\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n// export default withAuthConsumer(Chat);\nimport React from 'react';\nimport { Chat, Channel, ChannelList, Window } from 'stream-chat-react';\nimport { ChannelHeader, MessageList } from 'stream-chat-react';\nimport { MessageInput, Thread } from 'stream-chat-react';\nimport { StreamChat } from 'stream-chat';\nimport 'stream-chat-react/dist/css/index.css';\nvar chatClient = new StreamChat('qk4nn7rpcn75');\nvar userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiZnJvc3R5LXJpdmVyLTIifQ.0AsawVJceEww5tm4G2B43m44CB8TYOEW7PlXL2-Kydo'; // custom channel preview component\n// class MyChannelPreview extends React.Component {\n//   render() {\n//       const {setActiveChannel, channel, unread} = this.props;\n//       return (\n//       <div className=\"channel_preview\">\n//         <a href=\"#\" onClick={(e) => setActiveChannel(channel, e)}>\n//           {channel.data.name} \n//         </a>\n//         <span>\n//           Unread messages: {unread}\n//         </span>\n//       </div>\n//     );\n//   }\n// }\n// a very minimalistic message component\n\nvar MyMessageComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyMessageComponent, _React$Component);\n\n  function MyMessageComponent() {\n    _classCallCheck(this, MyMessageComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyMessageComponent).apply(this, arguments));\n  }\n\n  _createClass(MyMessageComponent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.props.message.user.name), \" \", this.props.message.text);\n    }\n  }]);\n\n  return MyMessageComponent;\n}(React.Component);\n\nchatClient.setUser({\n  id: 'frosty-river-2',\n  name: 'Frosty river',\n  image: 'https://getstream.io/random_svg/?id=frosty-river-2&name=Frosty+river'\n}, userToken);\nvar filters = {};\nvar sort = {\n  last_message_at: -1\n};\nvar channels = chatClient.queryChannels(filters, sort);\n\nvar App = function App() {\n  return React.createElement(Chat, {\n    client: chatClient,\n    theme: 'messaging light',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(ChannelList, {\n    channels: channels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(Channel, {\n    Message: MyMessageComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Window, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(ChannelHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(MessageList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(MessageInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(Thread, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/chat/Chat.js"],"names":["React","Chat","Channel","ChannelList","Window","ChannelHeader","MessageList","MessageInput","Thread","StreamChat","chatClient","userToken","MyMessageComponent","props","message","user","name","text","Component","setUser","id","image","filters","sort","last_message_at","channels","queryChannels","App"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,WAAxB,EAAqCC,MAArC,QAAmD,mBAAnD;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mBAA3C;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,mBAArC;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAO,sCAAP;AAEA,IAAMC,UAAU,GAAG,IAAID,UAAJ,CAAe,cAAf,CAAnB;AACA,IAAME,SAAS,GAAG,yHAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;IACMC,kB;;;;;;;;;;;;;6BACK;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBC,IAA5B,CAAL,OAA4C,KAAKH,KAAL,CAAWC,OAAX,CAAmBG,IAA/D,CAAP;AACD;;;;EAH8BjB,KAAK,CAACkB,S;;AAMvCR,UAAU,CAACS,OAAX,CACE;AACEC,EAAAA,EAAE,EAAE,gBADN;AAEEJ,EAAAA,IAAI,EAAE,cAFR;AAGEK,EAAAA,KAAK,EAAE;AAHT,CADF,EAMEV,SANF;AASA,IAAMW,OAAO,GAAG,EAAhB;AACA,IAAMC,IAAI,GAAG;AAAEC,EAAAA,eAAe,EAAE,CAAC;AAApB,CAAb;AACA,IAAMC,QAAQ,GAAGf,UAAU,CAACgB,aAAX,CAAyBJ,OAAzB,EAAkCC,IAAlC,CAAjB;;AAEA,IAAMI,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEjB,UAAd;AAA0B,IAAA,KAAK,EAAE,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEe,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEb,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,CADU;AAAA,CAAZ;;AAcA,eAAee,GAAf","sourcesContent":["// import React, { Component } from 'react';\n// import { withAuthConsumer } from '../../contexts/AuthStore';\n// import classroomService from '../../services/classroom-service';\n// import { Link, NavLink } from 'react-router-dom';\n\n\n// class Chat extends Component {\n//   state = {\n//     students: this.props.classroom.students,\n//     messages:[],\n//     show: false\n//   }\n\n//   fetchClassrooms = () => {\n\n//   }\n\n//   componentDidMount(){\n\n//   }\n\n//   handleShow = () => {\n//     this.setState({ show: true });\n//   }\n\n\n\n//   render() {\n    \n//     return(\n//       <div>\n//         <div className=\"classroom\" hidden={this.state.show}>\n//           {this.state.students.map(student => (\n//             <Link \n//               className=\"btn inbox-btn\" \n//               key={student.id} \n//               to=\"/conversation\"\n//               student={student.id}\n//               onClick={this.handleShow}\n//             >\n//             <div className=\"d-flex flex-row align-items-center\">\n//               <img className=\"inbox-btn-img\" src={student.imageURL} alt=\"student-avatar\"/>\n//               <p className=\"mb-0 ml-3\">{student.name} {student.surname}</p>\n//             </div>\n              \n//             <div>\n                \n//             </div>  \n//             </Link>\n//           ))}\n          \n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\n// export default withAuthConsumer(Chat);\n\nimport React from 'react';\nimport { Chat, Channel, ChannelList, Window } from 'stream-chat-react';\nimport { ChannelHeader, MessageList } from 'stream-chat-react';\nimport { MessageInput, Thread } from 'stream-chat-react';\nimport { StreamChat } from 'stream-chat';\n\nimport 'stream-chat-react/dist/css/index.css';\n\nconst chatClient = new StreamChat('qk4nn7rpcn75');\nconst userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiZnJvc3R5LXJpdmVyLTIifQ.0AsawVJceEww5tm4G2B43m44CB8TYOEW7PlXL2-Kydo';\n\n// custom channel preview component\n// class MyChannelPreview extends React.Component {\n//   render() {\n//       const {setActiveChannel, channel, unread} = this.props;\n//       return (\n//       <div className=\"channel_preview\">\n//         <a href=\"#\" onClick={(e) => setActiveChannel(channel, e)}>\n//           {channel.data.name} \n//         </a>\n\n//         <span>\n//           Unread messages: {unread}\n//         </span>\n//       </div>\n//     );\n//   }\n// }\n\n// a very minimalistic message component\nclass MyMessageComponent extends React.Component {\n  render() {\n    return <div><b>{this.props.message.user.name}</b> {this.props.message.text}</div>;\n  }\n}\n\nchatClient.setUser(\n  {\n    id: 'frosty-river-2',\n    name: 'Frosty river',\n    image: 'https://getstream.io/random_svg/?id=frosty-river-2&name=Frosty+river'\n  },\n  userToken,\n);\n\nconst filters = { };\nconst sort = { last_message_at: -1 };\nconst channels = chatClient.queryChannels(filters, sort);\n\nconst App = () => (\n  <Chat client={chatClient} theme={'messaging light'}>\n    <ChannelList channels={channels} />\n    <Channel Message={MyMessageComponent}>\n      <Window>\n        <ChannelHeader />\n        <MessageList />\n        <MessageInput />\n      </Window>\n      <Thread />\n    </Channel>\n  </Chat>\n);\n\nexport default App;"]},"metadata":{},"sourceType":"module"}