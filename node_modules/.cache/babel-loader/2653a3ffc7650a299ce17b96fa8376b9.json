{"ast":null,"code":"import _defineProperty from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/Groups/NewGroup.js\";\nimport React, { Component } from 'react';\nimport groupService from '../../services/group-service';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport { Modal, Button } from 'react-bootstrap'; //import Select from 'react-select-plus';\n//import 'react-select-plus/dist/react-select-plus';\n\nvar options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\nvar validations = {\n  content: function content(value) {\n    var message;\n\n    if (!value) {\n      message = 'Some message is required';\n    }\n\n    return message;\n  }\n};\n\nvar NewGroup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewGroup, _Component);\n\n  function NewGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      group: {\n        title: '',\n        subgroup: []\n      },\n      errors: {\n        title: validations.title()\n      },\n      touch: {},\n      show: false,\n      selectedOption: ''\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState({\n        classroom: _objectSpread({}, _this.state.classroom, _defineProperty({}, name, value)),\n        errors: _objectSpread({}, _this.state.errors, _defineProperty({}, name, validations[name] && validations[name](value)))\n      });\n    };\n\n    _this.handleBLur = function (event) {\n      var name = event.target.name;\n\n      _this.setState(_objectSpread({}, _this.state.touch, _defineProperty({}, name, true)));\n    };\n\n    _this.createClassroom = function (event) {\n      event.preventDefault();\n\n      var classroomData = _objectSpread({}, _this.state.classroom, {\n        teachers: _this.props.user.id\n      });\n\n      groupService.createClassroom(classroomData).then(_this.props.fetchClassrooms).then(_this.setState({\n        show: false\n      }));\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        show: false\n      });\n    };\n\n    _this.handleShow = function () {\n      _this.setState({\n        show: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          classroom = _this$state.classroom,\n          touch = _this$state.touch,\n          errors = _this$state.errors,\n          show = _this$state.show;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-info new-classroom-btn\",\n        onClick: this.handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"+ New Group\"), React.createElement(Modal, {\n        show: show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Create a new Group\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.createClassroom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"nameGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Group name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm \".concat(touch.title ? errors.title ? 'is-invalid' : 'is-valid' : ''),\n        id: \"nameGroup\",\n        value: classroom.title,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        name: \"title\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"info\",\n        onClick: this.createClassroom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Create\"))));\n    }\n  }]);\n\n  return NewGroup;\n}(Component);\n\nexport default withAuthConsumer(NewGroup);","map":{"version":3,"sources":["/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/Groups/NewGroup.js"],"names":["React","Component","groupService","withAuthConsumer","Modal","Button","options","value","label","validations","content","message","NewGroup","state","group","title","subgroup","errors","touch","show","selectedOption","handleChange","event","target","name","setState","classroom","handleBLur","createClassroom","preventDefault","classroomData","teachers","props","user","id","then","fetchClassrooms","handleClose","handleShow","handleBlur"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport groupService from '../../services/group-service'\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport { Modal, Button } from 'react-bootstrap';\n\n//import Select from 'react-select-plus';\n//import 'react-select-plus/dist/react-select-plus';\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' }\n];\n\nconst validations = {\n  content: (value) => {\n  let message;\n  if(!value){\n    message = 'Some message is required'\n  }\n  return message;\n}}\nclass NewGroup extends Component {\n  \n  state = {\n    group: {\n      title: '',\n      subgroup:[]\n    },\n    errors: {\n      title: validations.title()\n    },\n    touch: {},\n    show: false,\n    selectedOption: ''\n  }\n\n  handleChange = (event) => {\n\n    const { name, value } = event.target;\n\n    this.setState({ \n      classroom: {\n        ...this.state.classroom,\n        [name]: value\n      },\n      errors: {\n        ...this.state.errors,\n        [name]: validations[name] && validations[name](value)\n      }\n    })\n  }\n\n  handleBLur = (event) => {\n    const { name } = event.target;\n  \n    this.setState({\n      ...this.state.touch,\n      [name]: true\n    })\n  }\n\n  createClassroom = (event) => {\n    event.preventDefault();\n    \n    const classroomData = {\n      ...this.state.classroom,\n      teachers: this.props.user.id\n    }\n    groupService.createClassroom(classroomData)\n    .then(this.props.fetchClassrooms)\n    .then(this.setState({ show: false }))\n  }\n\n  handleClose = () => {this.setState({ show: false });}\n\n  handleShow = () => {this.setState({ show: true });}\n\n  render() {\n    const { classroom, touch, errors, show } = this.state;\n\n    \n    return(\n      <div>\n          <Button variant=\"outline-info new-classroom-btn\" onClick={this.handleShow}>+ New Group</Button>\n\n          <Modal show={show} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Create a new Group</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <form onSubmit={this.createClassroom}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"nameGroup\">Group name</label>\n                  <input type=\"text\" \n                    className={`form-control form-control-sm ${touch.title ? (errors.title ? 'is-invalid' : 'is-valid') : ''}`} \n                    id=\"nameGroup\"\n                    value={classroom.title} \n                    onChange={this.handleChange}\n                    onBlur={this.handleBlur}\n                    name=\"title\"\n                    autoComplete=\"off\"\n                    />\n                </div>\n                {/* <Select\n        value={this.state.selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      /> */}\n              </form>\n            </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"info\" onClick={this.createClassroom}>Create</Button>\n              </Modal.Footer>\n          </Modal>\n      </div>\n    )\n  }\n}\n\nexport default withAuthConsumer(NewGroup) ;"]},"metadata":{},"sourceType":"module"}