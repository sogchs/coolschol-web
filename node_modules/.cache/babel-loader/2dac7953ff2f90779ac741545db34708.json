{"ast":null,"code":"// import React, { Component } from 'react';\n// import { Link, Redirect, withRouter } from 'react-router-dom'\n// import authService from '../../services/auth-service';\n// import { withAuthConsumer } from '../../contexts/AuthStore';\n// import { FloatingMenu, MainButton, } from 'react-floating-button-menu';\n// import ChildButton from './ChildButton'\n// class FooterNav extends Component {\n//   state={\n//     isOpenSet: false,\n//     isOpenApps: false,\n//     redirect: null\n//   }\n//   handleLogout = () => {\n//     authService.logout()\n//       .then( () => {\n//         this.props.onUserChanged({})\n//         this.props.history.push('/login')\n//       })\n//   }\n//   handleClickClassroom = () => {this.setState({ redirect: \"/classroom\" }).then(this.setState({redirect:null}))}\n//   // handleClickTimer = () => {this.setState({ redirect: \"/timer\" })}\n//   // handleClickGroups = () => {this.setState({ redirect: \"/groups\" })}\n//   // handleClickChat = () => {this.setState({ redirect: \"/chat\" })}\n//   // handleClickBoard = () => {this.setState({ redirect: \"/board\" })}\n//   // handleClickCalendar = () => {this.setState({ redirect: \"/calendar\" })}\n//   // handleClickStudent = () => {this.setState({ redirect: \"/student\" })}\n//   // handleClickProfile = () => {this.setState({ redirect: \"/classroom\" })}\n//   // handleClickClassroomEdit = () => {this.setState({ redirect: \"/classroom-edit\" })}\n//   render() {\n//     const redirect = <Redirect to=\"/home\" />;\n//     if (this.state.redirect) {\n//       return <Redirect to={this.state.redirect} />\n//     }\n//     return(\n//       <div className=\"container-footerNav\">\n//       {/* <Link to=\"/home\">Home</Link>\n//       <Link to=\"/calendar\">Calendar</Link>\n//       <Link to=\"/groups\">Groups</Link> */}\n//       {this.props.app !== false &&\n//       <>\n//         <MainButton\n//             className=\"btns-footerNav\"\n//             iconResting={<span className=\"icon-home-chip\"></span>}\n//             iconActive={<span className=\"icon-home-chip\"></span>}\n//             iconColor=\"white\"\n//             backgroundColor=\"black\"\n//             size={56}\n//             onClick={(redirect) => redirect}\n//           />\n//         <FloatingMenu\n//           slideSpeed={500}\n//           direction=\"up\"\n//           isOpen={this.state.isOpenApps}\n//         >\n//           <MainButton\n//             className=\"btns-footerNav\"\n//             iconResting={<span className=\"icon-apps\"></span>}\n//             iconActive={<span className=\"icon-apps\"></span>}\n//             iconColor=\"white\"\n//             backgroundColor=\"black\"\n//             size={56}\n//             onClick={() => this.setState({ isOpenApps: !this.state.isOpenApps })}\n//           />\n//           <ChildButton\n//             className=\"btns-set\"\n//             icon={<span className=\"icon-temporizador\"></span>}\n//             href=\"./timer\"\n//             size={56}\n//             onClick={this.handleClickTimer}\n//             />\n//           <ChildButton\n//             className=\"btns-set\"\n//             icon={<span className=\"icon-grupos\"></span>}\n//             href=\"\" \n//             size={56}\n//             onClick={this.handleClickGroups}\n//             />\n//           <ChildButton\n//             className=\"btns-set\"\n//             icon={<span className=\"icon-conversation\"></span>}\n//             size={56}\n//             />\n//           <ChildButton\n//             className=\"btns-set\"\n//             icon={<span className=\"icon-tablon\"></span>}\n//             href=\"\" \n//             size={56}\n//             />\n//           <ChildButton\n//             className=\"btns-set\"\n//             icon={<span className=\"icon-calendario\"></span>}\n//             href=\"\" \n//             size={56}\n//             />\n//         </FloatingMenu>\n//         <FloatingMenu\n//         slideSpeed={500}\n//         direction=\"up\"\n//         isOpen={this.state.isOpenSet}\n//       >\n//         <MainButton\n//           className=\"btns-footerNav\"\n//           iconResting={<span className=\"icon-ajustes\"></span>}\n//           iconActive={<span className=\"icon-ajustes\"></span>}\n//           iconColor=\"white\"\n//           backgroundColor=\"black\"\n//           size={56}\n//           onClick={() => this.setState({ isOpenSet: !this.state.isOpenSet })}\n//         />\n//         <ChildButton\n//           className=\"btns-set\"\n//           icon={<span className=\"icon-log-out\"></span>}\n//           href=\"\" \n//           size={56}\n//           />\n//         <ChildButton\n//           className=\"btns-set\"\n//           icon={<span className=\"icon-set-profile\"></span>}\n//           href=\"\" \n//           size={56}\n//           />\n//         <ChildButton\n//           className=\"btns-set\"\n//           icon={<span className=\"icon-set-classroom\"></span>}\n//           href=\"\" \n//           size={56}\n//           />\n//       </FloatingMenu>\n//       </>\n//       }\n//       {this.props.app === false &&\n//       <MainButton\n//             className=\"btns-footerNav\"\n//             iconResting={<span className=\"icon-log-out\"></span>}\n//             iconActive={<span className=\"icon-log-out\"></span>}\n//             iconColor=\"white\"\n//             backgroundColor=\"black\"\n//             size={56}\n//             onClick={() => this.handleLogout()}\n//           />}\n//     </div>\n//     )\n//   }\n// }\n// export default withAuthConsumer(withRouter(FooterNav)) ;\n'use strict';\n\nimport _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/misc/FooterNav.js\";\n\nvar React = require('react');\n\nvar PropTypes = require(\"prop-types\");\n\nvar getClasses = require('./utils/get-classes');\n\nvar getChildren = require('./utils/get-children');\n\nvar childrenValidator = require('./utils/children-validator');\n\nvar Menu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Menu).call(this, props));\n    _this.state = {\n      isOpen: false\n    };\n    _this.toggleMenu = _this.toggleMenu.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"toggleMenu\",\n    value: function toggleMenu(evt) {\n      evt.preventDefault();\n\n      if (this.props.method === 'hover') {\n        return;\n      } // flip the state from open to close and viceversa\n\n\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = getClasses(this.props);\n      var buttons = getChildren(this.props.children);\n      var main = buttons.main && React.cloneElement(buttons.main, {\n        onClick: this.toggleMenu\n      });\n      return React.createElement(\"ul\", {\n        className: classes,\n        \"data-mfb-toggle\": this.props.method,\n        \"data-mfb-state\": this.state.isOpen ? 'open' : 'closed',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"mfb-component__wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, main, React.createElement(\"ul\", {\n        className: \"mfb-component__list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, buttons.child)));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nMenu.propTypes = {\n  effect: PropTypes.oneOf(['zoomin', 'slidein', 'slidein-spring', 'fountain']).isRequired,\n  position: PropTypes.oneOf(['tl', 'tr', 'bl', 'br']).isRequired,\n  children: childrenValidator\n};\nmodule.exports = Menu;","map":{"version":3,"sources":["/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/misc/FooterNav.js"],"names":["React","require","PropTypes","getClasses","getChildren","childrenValidator","Menu","props","state","isOpen","toggleMenu","bind","evt","preventDefault","method","setState","classes","buttons","children","main","cloneElement","onClick","child","Component","propTypes","effect","oneOf","isRequired","position","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;;;;;;;;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAvB;;AAEA,IAAIE,UAAU,GAAGF,OAAO,CAAC,qBAAD,CAAxB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,sBAAD,CAAzB;;AACA,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,4BAAD,CAA/B;;IAEMK,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAIA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AANiB;AAOlB;;;;+BAEUC,G,EAAK;AACdA,MAAAA,GAAG,CAACC,cAAJ;;AAEA,UAAI,KAAKN,KAAL,CAAWO,MAAX,KAAsB,OAA1B,EAAmC;AACjC;AACD,OALa,CAMd;;;AACA,WAAKC,QAAL,CAAc;AACZN,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADR,OAAd;AAGD;;;6BAEQ;AACP,UAAIO,OAAO,GAAGb,UAAU,CAAC,KAAKI,KAAN,CAAxB;AACA,UAAIU,OAAO,GAAGb,WAAW,CAAC,KAAKG,KAAL,CAAWW,QAAZ,CAAzB;AAEA,UAAIC,IAAI,GAAGF,OAAO,CAACE,IAAR,IAAgBnB,KAAK,CAACoB,YAAN,CAAmBH,OAAO,CAACE,IAA3B,EAAiC;AAC1DE,QAAAA,OAAO,EAAE,KAAKX;AAD4C,OAAjC,CAA3B;AAIA,aACE;AAAI,QAAA,SAAS,EAAEM,OAAf;AACI,2BAAiB,KAAKT,KAAL,CAAWO,MADhC;AAEI,0BAAgB,KAAKN,KAAL,CAAWC,MAAX,GAAoB,MAApB,GAA6B,QAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGU,IADH,EAEE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,OAAO,CAACK,KADX,CAFF,CAHF,CADF;AAYD;;;;EA1CgBtB,KAAK,CAACuB,S;;AA6CzBjB,IAAI,CAACkB,SAAL,GAAiB;AACfC,EAAAA,MAAM,EAAEvB,SAAS,CAACwB,KAAV,CAAgB,CAAC,QAAD,EAAW,SAAX,EAAsB,gBAAtB,EAAwC,UAAxC,CAAhB,EAAqEC,UAD9D;AAEfC,EAAAA,QAAQ,EAAE1B,SAAS,CAACwB,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAhB,EAA0CC,UAFrC;AAGfT,EAAAA,QAAQ,EAAEb;AAHK,CAAjB;AAMAwB,MAAM,CAACC,OAAP,GAAiBxB,IAAjB","sourcesContent":["// import React, { Component } from 'react';\n// import { Link, Redirect, withRouter } from 'react-router-dom'\n// import authService from '../../services/auth-service';\n// import { withAuthConsumer } from '../../contexts/AuthStore';\n\n// import { FloatingMenu, MainButton, } from 'react-floating-button-menu';\n// import ChildButton from './ChildButton'\n\n// class FooterNav extends Component {\n\n//   state={\n//     isOpenSet: false,\n//     isOpenApps: false,\n//     redirect: null\n//   }\n\n//   handleLogout = () => {\n//     authService.logout()\n//       .then( () => {\n//         this.props.onUserChanged({})\n//         this.props.history.push('/login')\n//       })\n//   }\n  \n\n//   handleClickClassroom = () => {this.setState({ redirect: \"/classroom\" }).then(this.setState({redirect:null}))}\n//   // handleClickTimer = () => {this.setState({ redirect: \"/timer\" })}\n//   // handleClickGroups = () => {this.setState({ redirect: \"/groups\" })}\n//   // handleClickChat = () => {this.setState({ redirect: \"/chat\" })}\n//   // handleClickBoard = () => {this.setState({ redirect: \"/board\" })}\n//   // handleClickCalendar = () => {this.setState({ redirect: \"/calendar\" })}\n//   // handleClickStudent = () => {this.setState({ redirect: \"/student\" })}\n//   // handleClickProfile = () => {this.setState({ redirect: \"/classroom\" })}\n//   // handleClickClassroomEdit = () => {this.setState({ redirect: \"/classroom-edit\" })}\n  \n  \n\n//   render() {\n//     const redirect = <Redirect to=\"/home\" />;\n//     if (this.state.redirect) {\n//       return <Redirect to={this.state.redirect} />\n//     }\n\n    \n//     return(\n//       <div className=\"container-footerNav\">\n//       {/* <Link to=\"/home\">Home</Link>\n//       <Link to=\"/calendar\">Calendar</Link>\n//       <Link to=\"/groups\">Groups</Link> */}\n//       {this.props.app !== false &&\n//       <>\n\n//         <MainButton\n//             className=\"btns-footerNav\"\n//             iconResting={<span className=\"icon-home-chip\"></span>}\n//             iconActive={<span className=\"icon-home-chip\"></span>}\n//             iconColor=\"white\"\n//             backgroundColor=\"black\"\n//             size={56}\n//             onClick={(redirect) => redirect}\n//           />\n//         <FloatingMenu\n//           slideSpeed={500}\n//           direction=\"up\"\n//           isOpen={this.state.isOpenApps}\n//         >\n//           <MainButton\n//             className=\"btns-footerNav\"\n//             iconResting={<span className=\"icon-apps\"></span>}\n//             iconActive={<span className=\"icon-apps\"></span>}\n//             iconColor=\"white\"\n//             backgroundColor=\"black\"\n//             size={56}\n//             onClick={() => this.setState({ isOpenApps: !this.state.isOpenApps })}\n//           />\n          \n//           <ChildButton\n//             className=\"btns-set\"\n//             icon={<span className=\"icon-temporizador\"></span>}\n//             href=\"./timer\"\n//             size={56}\n//             onClick={this.handleClickTimer}\n//             />\n//           <ChildButton\n//             className=\"btns-set\"\n//             icon={<span className=\"icon-grupos\"></span>}\n//             href=\"\" \n//             size={56}\n//             onClick={this.handleClickGroups}\n//             />\n      \n//           <ChildButton\n//             className=\"btns-set\"\n//             icon={<span className=\"icon-conversation\"></span>}\n//             size={56}\n//             />\n//           <ChildButton\n//             className=\"btns-set\"\n//             icon={<span className=\"icon-tablon\"></span>}\n//             href=\"\" \n//             size={56}\n//             />\n//           <ChildButton\n//             className=\"btns-set\"\n//             icon={<span className=\"icon-calendario\"></span>}\n//             href=\"\" \n//             size={56}\n//             />\n//         </FloatingMenu>\n\n//         <FloatingMenu\n//         slideSpeed={500}\n//         direction=\"up\"\n//         isOpen={this.state.isOpenSet}\n//       >\n//         <MainButton\n//           className=\"btns-footerNav\"\n//           iconResting={<span className=\"icon-ajustes\"></span>}\n//           iconActive={<span className=\"icon-ajustes\"></span>}\n//           iconColor=\"white\"\n//           backgroundColor=\"black\"\n//           size={56}\n//           onClick={() => this.setState({ isOpenSet: !this.state.isOpenSet })}\n//         />\n//         <ChildButton\n//           className=\"btns-set\"\n//           icon={<span className=\"icon-log-out\"></span>}\n//           href=\"\" \n//           size={56}\n//           />\n//         <ChildButton\n//           className=\"btns-set\"\n//           icon={<span className=\"icon-set-profile\"></span>}\n//           href=\"\" \n//           size={56}\n//           />\n//         <ChildButton\n//           className=\"btns-set\"\n//           icon={<span className=\"icon-set-classroom\"></span>}\n//           href=\"\" \n//           size={56}\n//           />\n        \n//       </FloatingMenu>\n//       </>\n//       }\n//       {this.props.app === false &&\n//       <MainButton\n//             className=\"btns-footerNav\"\n//             iconResting={<span className=\"icon-log-out\"></span>}\n//             iconActive={<span className=\"icon-log-out\"></span>}\n//             iconColor=\"white\"\n//             backgroundColor=\"black\"\n//             size={56}\n//             onClick={() => this.handleLogout()}\n//           />}\n//     </div>\n\n//     )\n//   }\n// }\n\n// export default withAuthConsumer(withRouter(FooterNav)) ;\n\n'use strict';\n\nvar React = require('react');\nvar PropTypes = require(\"prop-types\");\n\nvar getClasses = require('./utils/get-classes');\nvar getChildren = require('./utils/get-children');\nvar childrenValidator = require('./utils/children-validator');\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  toggleMenu(evt) {\n    evt.preventDefault();\n\n    if (this.props.method === 'hover') {\n      return;\n    }\n    // flip the state from open to close and viceversa\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    var classes = getClasses(this.props);\n    var buttons = getChildren(this.props.children);\n\n    var main = buttons.main && React.cloneElement(buttons.main, {\n      onClick: this.toggleMenu\n    });\n\n    return (\n      <ul className={classes}\n          data-mfb-toggle={this.props.method}\n          data-mfb-state={this.state.isOpen ? 'open' : 'closed'}>\n        <li className=\"mfb-component__wrap\">\n          {main}\n          <ul className=\"mfb-component__list\">\n            {buttons.child}\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n\nMenu.propTypes = {\n  effect: PropTypes.oneOf(['zoomin', 'slidein', 'slidein-spring', 'fountain']).isRequired,\n  position: PropTypes.oneOf(['tl', 'tr', 'bl', 'br']).isRequired,\n  children: childrenValidator\n};\n\nmodule.exports = Menu;"]},"metadata":{},"sourceType":"module"}