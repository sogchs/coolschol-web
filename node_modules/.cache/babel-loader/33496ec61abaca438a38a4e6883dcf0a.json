{"ast":null,"code":"import _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/timer/Timer.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Button, ButtonGroup, Nav } from 'react-bootstrap';\nimport Chronometer from './Chronometer';\nimport Countdown from './Countdown';\nimport NavTimer from './NavTimer';\n\nvar Timer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timer, _Component);\n\n  function Timer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Timer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      show: false,\n      chronometer: false,\n      countdown: false\n    };\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          chronometer = _this$state.chronometer,\n          countdown = _this$state.countdown;\n      var timer;\n\n      if (this.state.mountTimer) {\n        timer = React.createElement(Timer, {\n          min: this.state.min,\n          sec: this.state.sec,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        });\n      } else {\n        timer = \"\";\n      }\n\n      var timerInput;\n\n      if (!this.state.disableTimeInput) {\n        timerInput = React.createElement(TimeInput, {\n          value: this.state.timeInputValue,\n          handleChange: this.handleTimeInput,\n          sec: this.state.sec,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      } else {\n        timerInput = \"\";\n      }\n\n      var disableButton;\n\n      if (this.state.timeInputValue > 0) {\n        disableButton = false;\n      } else {\n        disableButton = true;\n      }\n\n      var reset;\n\n      if (this.state.mountReset) {\n        reset = React.createElement(Reset, {\n          handleReset: this.handleReset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      } else {\n        reset = \"\";\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container-timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: \"btn-group-timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            countdown: !countdown,\n            chronometer: false\n          });\n        },\n        \"aria-controls\": \"collapse-countdown\",\n        \"aria-expanded\": countdown,\n        variant: \"outline-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Countdown\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            chronometer: !chronometer,\n            countdown: false\n          });\n        },\n        \"aria-controls\": \"collapse-chronometer\",\n        \"aria-expanded\": chronometer,\n        variant: \"outline-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Chronometer\")), React.createElement(Collapse, {\n        in: this.state.countdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"collapse-countdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"timerBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, timer, timerInput, React.createElement(\"div\", {\n        id: \"buttonContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonText: this.state.buttonText,\n        handleButton: this.handleButton,\n        enable: disableButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), reset)))), React.createElement(Collapse, {\n        in: this.state.chronometer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"collapse-chronometer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Chronometer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Timer;\n}(Component);\n\nexport default Timer;","map":{"version":3,"sources":["/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/timer/Timer.js"],"names":["React","Component","Collapse","Button","ButtonGroup","Nav","Chronometer","Countdown","NavTimer","Timer","state","show","chronometer","countdown","timer","mountTimer","min","sec","timerInput","disableTimeInput","timeInputValue","handleTimeInput","disableButton","reset","mountReset","handleReset","setState","buttonText","handleButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Button, ButtonGroup, Nav } from 'react-bootstrap';\nimport Chronometer from './Chronometer';\nimport Countdown from './Countdown';\nimport NavTimer from './NavTimer';\n\nclass Timer extends Component{\n\n  state ={\n    show: false,\n    chronometer: false,\n    countdown: false\n  }\n\n  render(){\n    const { chronometer, countdown } = this.state;\n    let timer;\n    if (this.state.mountTimer) {\n      timer = <Timer min={this.state.min} sec={this.state.sec} />;\n    } else {\n      timer = \"\";\n    }\n    let timerInput;\n    if (!this.state.disableTimeInput) {\n        timerInput = <TimeInput value={this.state.timeInputValue} handleChange={this.handleTimeInput} sec={this.state.sec} />;\n    } else {\n      timerInput = \"\";\n    }\n    let disableButton;\n    if (this.state.timeInputValue > 0) {\n      disableButton = false;\n    } else {\n      disableButton = true;\n    }\n    let reset;\n    if (this.state.mountReset) {\n      reset = <Reset handleReset={this.handleReset} />;\n    } else {\n      reset = \"\";\n    }\n\n    return(\n      \n      <div className=\"container-timer\">\n        <ButtonGroup className=\"btn-group-timer\">\n        <Button\n          onClick={() => this.setState({ countdown: !countdown, chronometer: false })}\n          aria-controls=\"collapse-countdown\"\n          aria-expanded={countdown}\n          variant=\"outline-secondary\"\n        >\n          Countdown\n        </Button>\n        <Button\n          onClick={() => this.setState({ chronometer: !chronometer, countdown: false })}\n          aria-controls=\"collapse-chronometer\"\n          aria-expanded={chronometer}\n          variant=\"outline-secondary\"\n        >\n          Chronometer\n        </Button>\n      </ButtonGroup>\n      <Collapse in={this.state.countdown}>\n        <div id=\"collapse-countdown\">\n          <div id=\"timerBody\" >\n          {timer}\n          {timerInput}\n          <div id=\"buttonContainer\">\n            <Button buttonText={this.state.buttonText} handleButton={this.handleButton} enable={disableButton} />\n            {reset}\n          </div>\n        </div>\n        </div>\n        \n      </Collapse>\n      <Collapse in={this.state.chronometer}>\n        <div id=\"collapse-chronometer\">\n          <Chronometer />\n        </div>\n      </Collapse>\n    </div>\n    )\n  }\n}\n\nexport default Timer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}