{"ast":null,"code":"import _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/timer/Countdown.js\";\nimport React, { Component } from 'react';\n\nvar Timer = function Timer(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.min), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \":\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.sec));\n};\n\nvar Countdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Countdown, _Component);\n\n  function Countdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Countdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Countdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      min: \"\",\n      sec: \"00\",\n      timeInputValue: 10,\n      disableTimeInput: false,\n      playerTime: \"\",\n      buttonText: \"start\",\n      mountTimer: false,\n      isRunning: false,\n      mountReset: false\n    };\n\n    _this.handleTimeInput = function (event) {\n      _this.setState({\n        timeInputValue: event.target.value\n      });\n    };\n\n    _this.handleButton = function (event) {\n      if (!_this.state.isRunning && _this.state.buttonText === \"start\") {\n        var playerTime = _this.state.timeInputValue * 60;\n\n        _this.setState({\n          instructions: \"You can pause or reset the timer at any time.\",\n          disableTimeInput: true,\n          playerTime: playerTime,\n          buttonText: \"pause\",\n          mountTimer: true,\n          isRunning: true,\n          mountReset: true\n        });\n\n        if (_this.state.timeInputValue < 10) {\n          _this.setState({\n            min: \"0\" + _this.state.timeInputValue\n          });\n        } else {\n          _this.setState({\n            min: _this.state.timeInputValue\n          });\n        }\n\n        _this.runTimer();\n      } else if (_this.state.isRunning && _this.state.buttonText === \"pause\") {\n        _this.stopTimer();\n\n        _this.setState({\n          instructions: \"The timer has been paused, press resume to continue.\",\n          isRunning: false,\n          buttonText: \"resume\"\n        });\n      } else if (!_this.state.isRunning && _this.state.buttonText === \"resume\") {\n        _this.runTimer();\n\n        _this.setState({\n          instructions: \"You can pause or reset the timer at any time.\",\n          isRunning: true,\n          buttonText: \"pause\"\n        });\n      } else if (_this.state.isRunning && _this.state.buttonText === \"new timer\") {\n        _this.audio.pause();\n\n        _this.setState({\n          instructions: \"Set the timer below and press start to begin.\",\n          isRunning: false,\n          buttonText: \"start\",\n          disableTimeInput: false,\n          mountTimer: false,\n          sec: \"00\"\n        });\n      }\n    };\n\n    _this.handleReset = function () {\n      window.clearInterval(_this.interval);\n\n      _this.setState({\n        instructions: \"Set the timer below and press start to begin.\",\n        min: \"\",\n        sec: \"00\",\n        timeInputValue: 10,\n        disableTimeInput: false,\n        playerTime: \"\",\n        buttonText: \"start\",\n        mountTimer: false,\n        isRunning: false,\n        mountReset: false\n      });\n    };\n\n    _this.runTimer = function () {\n      _this.interval = setInterval(function () {\n        _this.setState({\n          playerTime: _this.state.playerTime -= 1\n        });\n\n        var startTime = _this.state.playerTime / 60;\n        var m = Math.floor(startTime);\n        var min;\n\n        if (m < 10) {\n          min = \"0\" + m;\n        } else {\n          min = m;\n        }\n\n        var s = Math.round((startTime - m) * 60);\n        var sec;\n\n        if (s < 10) {\n          sec = \"0\" + s;\n        } else {\n          sec = s;\n        }\n\n        if (_this.state.playerTime < 1) {\n          _this.audio.loop = true;\n\n          _this.audio.play();\n\n          window.clearInterval(_this.interval);\n\n          _this.setState({\n            instructions: \"Time's up! Don't forget to turn off the oven!\",\n            buttonText: \"new timer\",\n            mountReset: false\n          });\n        }\n\n        _this.setState({\n          min: min,\n          sec: sec,\n          isRunning: true\n        });\n      }, 1000);\n    };\n\n    _this.stopTimer = function () {\n      window.clearInterval(_this.interval);\n    };\n\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: \"render\",\n    value: function render() {\n      var timer;\n\n      if (this.state.mountTimer) {\n        timer = React.createElement(Timer, {\n          min: this.state.min,\n          sec: this.state.sec,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        });\n      } else {\n        timer = \"\";\n      }\n\n      var timerInput;\n\n      if (!this.state.disableTimeInput) {\n        timerInput = React.createElement(TimeInput, {\n          value: this.state.timeInputValue,\n          handleChange: this.handleTimeInput,\n          sec: this.state.sec,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        });\n      } else {\n        timerInput = \"\";\n      }\n\n      var disableButton;\n\n      if (this.state.timeInputValue > 0) {\n        disableButton = false;\n      } else {\n        disableButton = true;\n      }\n\n      var reset;\n\n      if (this.state.mountReset) {\n        reset = React.createElement(Reset, {\n          handleReset: this.handleReset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        });\n      } else {\n        reset = \"\";\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"timerBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, props.min), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \":\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, props.sec)), React.createElement(\"div\", {\n        id: \"timerInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        max: \"99\",\n        disabled: props.enable,\n        value: props.value,\n        onChange: props.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \":\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, props.sec)), React.createElement(\"div\", {\n        id: \"buttonContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: props.enable,\n        onClick: props.handleButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, props.buttonText), React.createElement(\"button\", {\n        id: \"reset\",\n        onClick: props.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"reset\"))));\n    }\n  }]);\n\n  return Countdown;\n}(Component);\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/timer/Countdown.js"],"names":["React","Component","Timer","props","min","sec","Countdown","state","timeInputValue","disableTimeInput","playerTime","buttonText","mountTimer","isRunning","mountReset","handleTimeInput","event","setState","target","value","handleButton","instructions","runTimer","stopTimer","audio","pause","handleReset","window","clearInterval","interval","setInterval","startTime","m","Math","floor","s","round","loop","play","timer","timerInput","disableButton","reset","enable","handleChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAK,CAACC,GAA9B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,KAAK,CAACE,GAAb,CAHF,CADF;AAOD,CARD;;IAUMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNH,MAAAA,GAAG,EAAE,EADC;AAENC,MAAAA,GAAG,EAAE,IAFC;AAGNG,MAAAA,cAAc,EAAE,EAHV;AAINC,MAAAA,gBAAgB,EAAE,KAJZ;AAKNC,MAAAA,UAAU,EAAE,EALN;AAMNC,MAAAA,UAAU,EAAE,OANN;AAONC,MAAAA,UAAU,EAAE,KAPN;AAQNC,MAAAA,SAAS,EAAE,KARL;AASNC,MAAAA,UAAU,EAAE;AATN,K;;UAYRC,e,GAAkB,UAACC,KAAD,EAAW;AAC3B,YAAKC,QAAL,CAAc;AACZT,QAAAA,cAAc,EAAEQ,KAAK,CAACE,MAAN,CAAaC;AADjB,OAAd;AAGD,K;;UAEDC,Y,GAAe,UAACJ,KAAD,EAAW;AACxB,UAAI,CAAC,MAAKT,KAAL,CAAWM,SAAZ,IAA0B,MAAKN,KAAL,CAAWI,UAAX,KAA0B,OAAxD,EAAkE;AAChE,YAAMD,UAAU,GAAI,MAAKH,KAAL,CAAWC,cAAX,GAA4B,EAAhD;;AACA,cAAKS,QAAL,CAAc;AACZI,UAAAA,YAAY,EAAE,+CADF;AAEZZ,UAAAA,gBAAgB,EAAE,IAFN;AAGZC,UAAAA,UAAU,EAAEA,UAHA;AAIZC,UAAAA,UAAU,EAAE,OAJA;AAKZC,UAAAA,UAAU,EAAE,IALA;AAMZC,UAAAA,SAAS,EAAE,IANC;AAOZC,UAAAA,UAAU,EAAE;AAPA,SAAd;;AASA,YAAI,MAAKP,KAAL,CAAWC,cAAX,GAA4B,EAAhC,EAAoC;AAClC,gBAAKS,QAAL,CAAc;AACZb,YAAAA,GAAG,EAAE,MAAM,MAAKG,KAAL,CAAWC;AADV,WAAd;AAGD,SAJD,MAIO;AACL,gBAAKS,QAAL,CAAc;AACZb,YAAAA,GAAG,EAAE,MAAKG,KAAL,CAAWC;AADJ,WAAd;AAGD;;AACD,cAAKc,QAAL;AACD,OArBD,MAqBO,IAAI,MAAKf,KAAL,CAAWM,SAAX,IAAyB,MAAKN,KAAL,CAAWI,UAAX,KAA0B,OAAvD,EAAiE;AACtE,cAAKY,SAAL;;AACA,cAAKN,QAAL,CAAc;AACZI,UAAAA,YAAY,EAAE,sDADF;AAEZR,UAAAA,SAAS,EAAE,KAFC;AAGZF,UAAAA,UAAU,EAAE;AAHA,SAAd;AAKD,OAPM,MAOA,IAAI,CAAC,MAAKJ,KAAL,CAAWM,SAAZ,IAA0B,MAAKN,KAAL,CAAWI,UAAX,KAA0B,QAAxD,EAAmE;AACxE,cAAKW,QAAL;;AACA,cAAKL,QAAL,CAAc;AACZI,UAAAA,YAAY,EAAE,+CADF;AAEZR,UAAAA,SAAS,EAAE,IAFC;AAGZF,UAAAA,UAAU,EAAE;AAHA,SAAd;AAKD,OAPM,MAOA,IAAI,MAAKJ,KAAL,CAAWM,SAAX,IAAyB,MAAKN,KAAL,CAAWI,UAAX,KAA0B,WAAvD,EAAqE;AAC1E,cAAKa,KAAL,CAAWC,KAAX;;AACA,cAAKR,QAAL,CAAc;AACZI,UAAAA,YAAY,EAAE,+CADF;AAEZR,UAAAA,SAAS,EAAE,KAFC;AAGZF,UAAAA,UAAU,EAAE,OAHA;AAIZF,UAAAA,gBAAgB,EAAE,KAJN;AAKZG,UAAAA,UAAU,EAAE,KALA;AAMZP,UAAAA,GAAG,EAAE;AANO,SAAd;AAQD;AACF,K;;UAEDqB,W,GAAc,YAAM;AAClBC,MAAAA,MAAM,CAACC,aAAP,CAAqB,MAAKC,QAA1B;;AACA,YAAKZ,QAAL,CAAc;AACZI,QAAAA,YAAY,EAAE,+CADF;AAEZjB,QAAAA,GAAG,EAAE,EAFO;AAGZC,QAAAA,GAAG,EAAE,IAHO;AAIZG,QAAAA,cAAc,EAAE,EAJJ;AAKZC,QAAAA,gBAAgB,EAAE,KALN;AAMZC,QAAAA,UAAU,EAAE,EANA;AAOZC,QAAAA,UAAU,EAAE,OAPA;AAQZC,QAAAA,UAAU,EAAE,KARA;AASZC,QAAAA,SAAS,EAAE,KATC;AAUZC,QAAAA,UAAU,EAAE;AAVA,OAAd;AAYD,K;;UAEDQ,Q,GAAW,YAAM;AACf,YAAKO,QAAL,GAAgBC,WAAW,CAAE,YAAM;AACjC,cAAKb,QAAL,CAAc;AACZP,UAAAA,UAAU,EAAE,MAAKH,KAAL,CAAWG,UAAX,IAAwB;AADxB,SAAd;;AAGA,YAAIqB,SAAS,GAAG,MAAKxB,KAAL,CAAWG,UAAX,GAAwB,EAAxC;AACA,YAAIsB,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAAR;AACA,YAAI3B,GAAJ;;AACA,YAAI4B,CAAC,GAAG,EAAR,EAAY;AACV5B,UAAAA,GAAG,GAAG,MAAM4B,CAAZ;AACD,SAFD,MAEO;AACL5B,UAAAA,GAAG,GAAG4B,CAAN;AACD;;AACD,YAAIG,CAAC,GAAGF,IAAI,CAACG,KAAL,CAAW,CAACL,SAAS,GAAGC,CAAb,IAAkB,EAA7B,CAAR;AACA,YAAI3B,GAAJ;;AACA,YAAI8B,CAAC,GAAG,EAAR,EAAY;AACV9B,UAAAA,GAAG,GAAG,MAAM8B,CAAZ;AACD,SAFD,MAEO;AACL9B,UAAAA,GAAG,GAAG8B,CAAN;AACD;;AACD,YAAI,MAAK5B,KAAL,CAAWG,UAAX,GAAwB,CAA5B,EAA+B;AAC7B,gBAAKc,KAAL,CAAWa,IAAX,GAAkB,IAAlB;;AACA,gBAAKb,KAAL,CAAWc,IAAX;;AACAX,UAAAA,MAAM,CAACC,aAAP,CAAqB,MAAKC,QAA1B;;AACA,gBAAKZ,QAAL,CAAc;AACZI,YAAAA,YAAY,EAAE,+CADF;AAEZV,YAAAA,UAAU,EAAE,WAFA;AAGZG,YAAAA,UAAU,EAAE;AAHA,WAAd;AAKD;;AACD,cAAKG,QAAL,CAAc;AACZb,UAAAA,GAAG,EAAEA,GADO;AAEZC,UAAAA,GAAG,EAAEA,GAFO;AAGZQ,UAAAA,SAAS,EAAE;AAHC,SAAd;AAKD,OAlC0B,EAkCxB,IAlCwB,CAA3B;AAmCD,K;;UAEDU,S,GAAY,YAAM;AAChBI,MAAAA,MAAM,CAACC,aAAP,CAAqB,MAAKC,QAA1B;AACD,K;;;;;;;6BAIO;AACN,UAAIU,KAAJ;;AACA,UAAI,KAAKhC,KAAL,CAAWK,UAAf,EAA2B;AACzB2B,QAAAA,KAAK,GAAG,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAE,KAAKhC,KAAL,CAAWH,GAAvB;AAA4B,UAAA,GAAG,EAAE,KAAKG,KAAL,CAAWF,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,OAFD,MAEO;AACLkC,QAAAA,KAAK,GAAG,EAAR;AACD;;AACD,UAAIC,UAAJ;;AACA,UAAI,CAAC,KAAKjC,KAAL,CAAWE,gBAAhB,EAAkC;AAC9B+B,QAAAA,UAAU,GAAG,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWC,cAA7B;AAA6C,UAAA,YAAY,EAAE,KAAKO,eAAhE;AAAiF,UAAA,GAAG,EAAE,KAAKR,KAAL,CAAWF,GAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACH,OAFD,MAEO;AACLmC,QAAAA,UAAU,GAAG,EAAb;AACD;;AACD,UAAIC,aAAJ;;AACA,UAAI,KAAKlC,KAAL,CAAWC,cAAX,GAA4B,CAAhC,EAAmC;AACjCiC,QAAAA,aAAa,GAAG,KAAhB;AACD,OAFD,MAEO;AACLA,QAAAA,aAAa,GAAG,IAAhB;AACD;;AACD,UAAIC,KAAJ;;AACA,UAAI,KAAKnC,KAAL,CAAWO,UAAf,EAA2B;AACzB4B,QAAAA,KAAK,GAAG,oBAAC,KAAD;AAAO,UAAA,WAAW,EAAE,KAAKhB,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,OAFD,MAEO;AACLgB,QAAAA,KAAK,GAAG,EAAR;AACD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBvC,KAAK,CAACC,GAA9B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,KAAK,CAACE,GAAb,CAHF,CAFA,EAQA;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAC,GAAzB;AAA6B,QAAA,GAAG,EAAC,IAAjC;AAAsC,QAAA,QAAQ,EAAEF,KAAK,CAACwC,MAAtD;AAA8D,QAAA,KAAK,EAAExC,KAAK,CAACgB,KAA3E;AAAkF,QAAA,QAAQ,EAAEhB,KAAK,CAACyC,YAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOzC,KAAK,CAACE,GAAb,CAHF,CARA,EAcA;AAAK,QAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,QAAQ,EAAEF,KAAK,CAACwC,MAAxB;AAAgC,QAAA,OAAO,EAAExC,KAAK,CAACiB,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8DjB,KAAK,CAACQ,UAApE,CADF,EAEE;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAmB,QAAA,OAAO,EAAER,KAAK,CAACuB,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CAdA,CADF,CADF;AAyBD;;;;EAlLqBzB,S;;AAoLxB,eAAeK,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst Timer = (props) => {\n  return (\n    <div>\n      <span className=\"time\">{props.min}</span>\n      <span>:</span>\n      <span>{props.sec}</span>\n    </div>\n  );\n}\n\nclass Countdown extends Component{\n  state = {\n    min: \"\",\n    sec: \"00\",\n    timeInputValue: 10,\n    disableTimeInput: false,\n    playerTime: \"\",\n    buttonText: \"start\",\n    mountTimer: false,\n    isRunning: false,\n    mountReset: false,\n  }\n\n  handleTimeInput = (event) => {\n    this.setState({\n      timeInputValue: event.target.value\n    });\n  }\n\n  handleButton = (event) => {\n    if (!this.state.isRunning && (this.state.buttonText === \"start\")) {\n      const playerTime = (this.state.timeInputValue * 60);\n      this.setState({\n        instructions: \"You can pause or reset the timer at any time.\",\n        disableTimeInput: true,\n        playerTime: playerTime,\n        buttonText: \"pause\",\n        mountTimer: true,\n        isRunning: true,\n        mountReset: true,\n      });\n      if (this.state.timeInputValue < 10) {\n        this.setState({\n          min: \"0\" + this.state.timeInputValue\n        });\n      } else {\n        this.setState({\n          min: this.state.timeInputValue\n        });\n      }\n      this.runTimer();\n    } else if (this.state.isRunning && (this.state.buttonText === \"pause\")) {\n      this.stopTimer();\n      this.setState({\n        instructions: \"The timer has been paused, press resume to continue.\",\n        isRunning: false,\n        buttonText: \"resume\"\n      });\n    } else if (!this.state.isRunning && (this.state.buttonText === \"resume\")) {\n      this.runTimer();\n      this.setState({\n        instructions: \"You can pause or reset the timer at any time.\",\n        isRunning: true,\n        buttonText: \"pause\"\n      });\n    } else if (this.state.isRunning && (this.state.buttonText === \"new timer\")) {\n      this.audio.pause();\n      this.setState({\n        instructions: \"Set the timer below and press start to begin.\",\n        isRunning: false,\n        buttonText: \"start\",\n        disableTimeInput: false,\n        mountTimer: false,\n        sec: \"00\"\n      });\n    }\n  }\n  \n  handleReset = () => {\n    window.clearInterval(this.interval);\n    this.setState({\n      instructions: \"Set the timer below and press start to begin.\",\n      min: \"\",\n      sec: \"00\",\n      timeInputValue: 10,\n      disableTimeInput: false,\n      playerTime: \"\",\n      buttonText: \"start\",\n      mountTimer: false,\n      isRunning: false,\n      mountReset: false,\n    });\n  }\n\n  runTimer = () => {\n    this.interval = setInterval( () => {\n      this.setState({\n        playerTime: this.state.playerTime -=1\n      });\n      let startTime = this.state.playerTime / 60;\n      let m = Math.floor(startTime);\n      let min;\n      if (m < 10) {\n        min = \"0\" + m;\n      } else {\n        min = m;\n      }\n      let s = Math.round((startTime - m) * 60);\n      let sec;\n      if (s < 10) {\n        sec = \"0\" + s;\n      } else {\n        sec = s;\n      }\n      if (this.state.playerTime < 1) {\n        this.audio.loop = true;\n        this.audio.play();\n        window.clearInterval(this.interval);\n        this.setState({\n          instructions: \"Time's up! Don't forget to turn off the oven!\",\n          buttonText: \"new timer\",\n          mountReset: false\n        });\n      }\n      this.setState({\n        min: min,\n        sec: sec,\n        isRunning: true\n      });\n    }, 1000);\n  }\n  \n  stopTimer = () => {\n    window.clearInterval(this.interval);\n  }\n\n \n\n  render(){\n    let timer;\n    if (this.state.mountTimer) {\n      timer = <Timer min={this.state.min} sec={this.state.sec} />;\n    } else {\n      timer = \"\";\n    }\n    let timerInput;\n    if (!this.state.disableTimeInput) {\n        timerInput = <TimeInput value={this.state.timeInputValue} handleChange={this.handleTimeInput} sec={this.state.sec} />;\n    } else {\n      timerInput = \"\";\n    }\n    let disableButton;\n    if (this.state.timeInputValue > 0) {\n      disableButton = false;\n    } else {\n      disableButton = true;\n    }\n    let reset;\n    if (this.state.mountReset) {\n      reset = <Reset handleReset={this.handleReset} />;\n    } else {\n      reset = \"\";\n    }\n    return(\n      <div>\n        <div id=\"timerBody\">\n        \n        <div>\n          <span className=\"time\">{props.min}</span>\n          <span>:</span>\n          <span>{props.sec}</span>\n        </div>\n\n        <div id=\"timerInput\">\n          <input type=\"number\" min=\"1\" max=\"99\" disabled={props.enable} value={props.value} onChange={props.handleChange}/>\n          <span>:</span>\n          <span>{props.sec}</span>\n        </div>\n\n        <div id=\"buttonContainer\">\n          <button disabled={props.enable} onClick={props.handleButton}>{props.buttonText}</button>\n          <button id=\"reset\" onClick={props.handleReset}>reset</button>\n        </div>\n      </div>\n\n      </div>\n\n    )\n  }\n}\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}