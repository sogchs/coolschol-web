{"ast":null,"code":"import _defineProperty from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/board/CreateColumn.js\";\nimport React, { Component } from 'react';\nimport boardService from '../../services/board-service';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport { Modal, Button } from 'react-bootstrap';\nvar validations = {\n  title: function title(value) {\n    return value.length > 0 && value.length < 30;\n  }\n};\n\nvar CreateColumn =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateColumn, _Component);\n\n  function CreateColumn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateColumn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateColumn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      column: {\n        title: '',\n        classroom: classroom\n      },\n      errors: {\n        title: true\n      },\n      touch: {},\n      show: false\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState({\n        column: _objectSpread({}, _this.state.column, _defineProperty({}, name, value)),\n        errors: _objectSpread({}, _this.state.errors, _defineProperty({}, name, validations[name] && validations[name](value)))\n      });\n    };\n\n    _this.handleBLur = function (event) {\n      var name = event.target.name;\n\n      _this.setState(_objectSpread({}, _this.state.touch, _defineProperty({}, name, true)));\n    };\n\n    _this.createColumn = function (event) {\n      event.preventDefault();\n\n      var columnData = _objectSpread({}, _this.state.column, {\n        classroom: _this.props.classroom.id\n      });\n\n      boardService.createColumn(columnData).then(_this.props.fetchColumns).then(_this.setState({\n        show: false\n      }));\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        show: false\n      });\n    };\n\n    _this.handleShow = function () {\n      _this.setState({\n        show: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateColumn, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          column = _this$state.column,\n          touch = _this$state.touch,\n          errors = _this$state.errors,\n          show = _this$state.show;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"column-add btn btn-outline-info\",\n        onClick: this.handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"+ New Column\"), React.createElement(Modal, {\n        show: show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Create a new Column for your board\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.createColumn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"nameClass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Column Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm \".concat(touch.title ? errors.title ? 'is-invalid' : 'is-valid' : ''),\n        id: \"nameClass\",\n        placeholder: \"Ex. Exams for training...\",\n        value: column.title,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        name: \"title\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"info\",\n        onClick: this.createColumn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Create\"))));\n    }\n  }]);\n\n  return CreateColumn;\n}(Component);\n\nexport default withAuthConsumer(CreateColumn);","map":{"version":3,"sources":["/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/board/CreateColumn.js"],"names":["React","Component","boardService","withAuthConsumer","Modal","Button","validations","title","value","length","CreateColumn","state","column","classroom","errors","touch","show","handleChange","event","target","name","setState","handleBLur","createColumn","preventDefault","columnData","props","id","then","fetchColumns","handleClose","handleShow","handleBlur"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport boardService from '../../services/board-service'\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst validations = { title: (value) => value.length > 0 && value.length < 30}\nclass CreateColumn extends Component {\n  \n  state = {\n    column: {\n      title: '',\n      classroom\n    },\n    errors: {\n      title: true\n    },\n    touch: {},\n    show: false\n  }\n\n  handleChange = (event) => {\n\n    const { name, value } = event.target;\n\n    this.setState({ \n      column: {\n        ...this.state.column,\n        [name]: value\n      },\n      errors: {\n        ...this.state.errors,\n        [name]: validations[name] && validations[name](value)\n      }\n    })\n  }\n\n  handleBLur = (event) => {\n    const { name } = event.target;\n  \n    this.setState({\n      ...this.state.touch,\n      [name]: true\n    })\n  }\n\n  createColumn = (event) => {\n    event.preventDefault();\n    \n    const columnData = {\n      ...this.state.column,\n      classroom: this.props.classroom.id\n    }\n    boardService.createColumn(columnData)\n    .then(this.props.fetchColumns)\n    .then(this.setState({ show: false }))\n  }\n\n  handleClose = () => {this.setState({ show: false });}\n\n  handleShow = () => {this.setState({ show: true });}\n\n  render() {\n    const { column, touch, errors, show } = this.state;\n\n    \n    return(\n      <div>\n          <Button variant=\"column-add btn btn-outline-info\" onClick={this.handleShow}>+ New Column</Button>\n\n          <Modal show={show} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Create a new Column for your board</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <form onSubmit={this.createColumn}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"nameClass\">Column Title</label>\n                  <input type=\"text\" \n                    className={`form-control form-control-sm ${touch.title ? (errors.title ? 'is-invalid' : 'is-valid') : ''}`} \n                    id=\"nameClass\" \n                    placeholder=\"Ex. Exams for training...\"\n                    value={column.title} \n                    onChange={this.handleChange}\n                    onBlur={this.handleBlur}\n                    name=\"title\"\n                    autoComplete=\"off\"\n                    />\n                </div>\n              </form>\n            </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"info\" onClick={this.createColumn}>Create</Button>\n              </Modal.Footer>\n          </Modal>\n      </div>\n    )\n  }\n}\n\nexport default withAuthConsumer(CreateColumn) ;"]},"metadata":{},"sourceType":"module"}