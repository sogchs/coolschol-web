{"ast":null,"code":"'use strict';\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction isGroup(option) {\n  return option && Array.isArray(option.options);\n}\n\nfunction menuRenderer(_ref) {\n  var focusedOption = _ref.focusedOption;\n  var instancePrefix = _ref.instancePrefix;\n  var labelKey = _ref.labelKey;\n  var onFocus = _ref.onFocus;\n  var onOptionRef = _ref.onOptionRef;\n  var onSelect = _ref.onSelect;\n  var optionClassName = _ref.optionClassName;\n  var optionComponent = _ref.optionComponent;\n  var optionGroupComponent = _ref.optionGroupComponent;\n  var optionRenderer = _ref.optionRenderer;\n  var options = _ref.options;\n  var valueArray = _ref.valueArray;\n  var valueKey = _ref.valueKey;\n  var OptionGroup = optionGroupComponent;\n  var Option = optionComponent;\n  var renderLabel = optionRenderer || this.getOptionLabel;\n\n  var renderOptions = function renderOptions(optionsSubset) {\n    return optionsSubset.map(function (option, i) {\n      if (isGroup(option)) {\n        var optionGroupClass = (0, _classnames2['default'])({\n          'Select-option-group': true\n        });\n        return _react2['default'].createElement(OptionGroup, {\n          className: optionGroupClass,\n          key: 'option-group-' + i,\n          label: renderLabel(option),\n          option: option,\n          optionIndex: i\n        }, renderOptions(option.options));\n      } else {\n        var _ret = function () {\n          var isSelected = valueArray && valueArray.indexOf(option) > -1;\n          var isFocused = option === focusedOption;\n          var optionRef = isFocused ? 'focused' : null;\n          var optionClass = (0, _classnames2['default'])(optionClassName, {\n            'Select-option': true,\n            'is-selected': isSelected,\n            'is-focused': isFocused,\n            'is-disabled': option.disabled\n          });\n          return {\n            v: _react2['default'].createElement(Option, {\n              className: optionClass,\n              instancePrefix: instancePrefix,\n              isDisabled: option.disabled,\n              isFocused: isFocused,\n              isSelected: isSelected,\n              key: 'option-' + i + '-' + option[valueKey],\n              onFocus: onFocus,\n              onSelect: onSelect,\n              option: option,\n              optionIndex: i,\n              ref: function ref(_ref2) {\n                onOptionRef(_ref2, isFocused);\n              }\n            }, renderLabel(option, i))\n          };\n        }();\n\n        if (typeof _ret === 'object') return _ret.v;\n      }\n    });\n  };\n\n  return renderOptions(options);\n}\n\nmodule.exports = menuRenderer;","map":null,"metadata":{},"sourceType":"script"}