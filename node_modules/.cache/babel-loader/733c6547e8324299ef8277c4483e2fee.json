{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styledJss from 'styled-jss';\nexport var DIRECTIONS = {\n  up: 'column-reverse',\n  down: 'column',\n  left: 'row-reverse',\n  right: 'row'\n};\nvar StyledUl = styledJss('ul')(function (_ref) {\n  var direction = _ref.direction;\n  return {\n    display: 'flex',\n    width: 'fit-content',\n    listStyle: 'none',\n    margin: '0',\n    padding: '0',\n    flexDirection: DIRECTIONS[direction],\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n});\n\nvar FloatingMenu = function (_Component) {\n  _inherits(FloatingMenu, _Component);\n\n  function FloatingMenu() {\n    _classCallCheck(this, FloatingMenu);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  FloatingMenu.prototype.render = function render() {\n    var _props = this.props,\n        slideSpeed = _props.slideSpeed,\n        direction = _props.direction,\n        className = _props.className,\n        isOpen = _props.isOpen,\n        spacing = _props.spacing;\n    var childrenWithProps = React.Children.map(this.props.children, function (child, index) {\n      return React.cloneElement(child, {\n        isOpen: isOpen,\n        slideSpeed: slideSpeed,\n        direction: direction,\n        index: index,\n        spacing: spacing\n      });\n    });\n    return React.createElement(StyledUl, {\n      className: className,\n      onClick: this.toggleMenu,\n      direction: direction\n    }, childrenWithProps);\n  };\n\n  return FloatingMenu;\n}(Component);\n\nFloatingMenu.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n  slideSpeed: PropTypes.number,\n  spacing: PropTypes.number,\n  direction: PropTypes.string,\n  isOpen: PropTypes.bool\n};\nFloatingMenu.defaultProps = {\n  className: '',\n  slideSpeed: 500,\n  direction: 'down',\n  isOpen: false,\n  spacing: 8\n};\nexport default FloatingMenu;","map":null,"metadata":{},"sourceType":"module"}