{"ast":null,"code":"/**\n *\n * @hack\n *\n * This is a dirty hack to fix URLs that have parenthesis and quotation marks in them\n * For example take this paragraph:\n *\n * \"\"\"\"\n * I visited this url: \"http://www.wikipedia.com/some_article(with_paranthesis)\"\n * and this URL: (http://www.wikipedia.com/some_article(with_paranthesis))\n * \"\"\"\"\n *\n * The quotation marks `'` `\"` and parenthesis `(` `)` `[` `]`\n * can be considered to be part of the URL, and as a\n * punctuation marks surrounding the URL.\n * While this hack works for the most part, it's quite dirty and\n * I may replace it with something better in the future.\n *\n *\n * Another fix is removing punctuation marks that may appear at the end of URL\n * Example:\n *\n * \"\"\"\"\n * I've visited google.com, facebook.com, and yahoo.com.\n * \"\"\"\"\n *\n * @todo: replace the following function with something cleaner.\n *\n *\n**/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction fixSeparators(arr, sep1, sep2) {\n  arr.forEach(function (bit, i) {\n    if (bit.indexOf(\".\") > -1 && !(arr[i - 1] === sep1 && arr[i + 1] === sep2) && (arr[i + 1] === sep1 || arr[i + 1] === sep2) // the one after it, is either sep1 or sep2\n    ) {\n        arr[i] = arr[i] + arr[i + 1];\n        if (typeof arr[i + 2] === \"string\") arr[i] = arr[i] + arr[i + 2];\n        if (typeof arr[i + 3] === \"string\") arr[i] = arr[i] + arr[i + 3];\n        if (typeof arr[i + 4] === \"string\") arr[i] = arr[i] + arr[i + 4];\n        arr.splice(i + 1, 4);\n        fixSeparators(arr, sep1, sep2);\n      }\n  });\n  return arr;\n}\n\nexports.fixSeparators = fixSeparators;\n\nfunction default_1(arr) {\n  arr = fixSeparators(arr, \"(\", \")\");\n  arr = fixSeparators(arr, \"[\", \"]\");\n  arr = fixSeparators(arr, \"\\\"\", \"\\\"\");\n  arr = fixSeparators(arr, \"'\", \"'\");\n  return arr;\n}\n\nexports.default = default_1;","map":null,"metadata":{},"sourceType":"script"}