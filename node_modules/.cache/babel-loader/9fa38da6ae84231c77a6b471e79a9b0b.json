{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint-disable react/no-unused-prop-types */\n\n\nimport React, { Component } from 'react';\nimport styled from 'styled-jss';\nimport PropTypes from 'prop-types';\nvar Wrapper = styled('a')(function (_ref) {\n  var backgroundColor = _ref.backgroundColor,\n      size = _ref.size,\n      iconColor = _ref.iconColor;\n  return {\n    color: iconColor,\n    zIndex: '1',\n    display: 'flex',\n    border: 'none',\n    borderRadius: '50%',\n    boxShadow: '0 0 4px rgba(0,0,0,.14),0 4px 8px rgba(0,0,0,.28)',\n    cursor: 'pointer',\n    outline: 'none',\n    padding: '0',\n    WebkitUserDrag: 'none',\n    fontWeight: 'bold',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: size,\n    height: size,\n    backgroundColor: backgroundColor\n  };\n});\nvar IconWrapper = styled('div')(function (_ref2) {\n  var isOpen = _ref2.isOpen;\n  return {\n    display: 'flex',\n    position: 'absolute',\n    WebkitTransition: '-webkit-transform 300ms',\n    transition: 'transform 300ms',\n    WebkitTransform: 'rotate(' + (isOpen ? 180 : 0) + 'deg)',\n    transform: 'rotate(' + (isOpen ? 180 : 0) + 'deg)'\n  };\n});\n\nvar MainButton = function (_Component) {\n  _inherits(MainButton, _Component);\n\n  function MainButton() {\n    _classCallCheck(this, MainButton);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  MainButton.prototype.render = function render() {\n    var _props = this.props,\n        iconResting = _props.iconResting,\n        iconActive = _props.iconActive,\n        isOpen = _props.isOpen;\n    return React.createElement(Wrapper, this.props, React.createElement(IconWrapper, {\n      isOpen: isOpen\n    }, isOpen ? iconActive : iconResting));\n  };\n\n  return MainButton;\n}(Component);\n\nMainButton.propTypes = {\n  iconResting: PropTypes.node.isRequired,\n  iconActive: PropTypes.node.isRequired,\n  isOpen: PropTypes.bool,\n  size: PropTypes.number\n};\nMainButton.defaultProps = {\n  isOpen: false,\n  size: 56\n};\nexport default MainButton;","map":null,"metadata":{},"sourceType":"module"}