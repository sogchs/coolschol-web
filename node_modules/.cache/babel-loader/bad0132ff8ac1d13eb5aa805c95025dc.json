{"ast":null,"code":"import _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/timer/Timer.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Button, ButtonGroup, Nav } from 'react-bootstrap';\nimport Chronometer from './Chronometer';\nimport Countdown from './Countdown';\nimport NavTimer from './NavTimer';\n\nvar TimerT = function TimerT(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.min), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \":\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.sec));\n};\n\nvar TimeInput = function TimeInput(props) {\n  console.log(\"props\", props);\n  return React.createElement(\"div\", {\n    id: \"timerInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"timeInputValue\",\n    type: \"number\",\n    min: \"1\",\n    max: \"99\",\n    disabled: props.enable,\n    value: props.value,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \":\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.sec));\n};\n\nvar ButtonB = function ButtonB(props) {\n  return React.createElement(\"button\", {\n    disabled: props.enable,\n    onClick: props.handleButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.buttonText);\n};\n\nvar Reset = function Reset(props) {\n  return React.createElement(\"button\", {\n    id: \"reset\",\n    onClick: props.handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"reset\");\n};\n\nvar Timer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timer, _Component);\n\n  function Timer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Timer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      show: false,\n      chronometer: false,\n      countdown: false,\n      min: \"\",\n      sec: \"00\",\n      timeInputValue: 10,\n      disableTimeInput: false,\n      playerTime: \"\",\n      buttonText: \"start\",\n      mountTimer: false,\n      isRunning: false,\n      mountReset: false\n    };\n    _this.url = \"https://res.cloudinary.com/dkgr9dg9n/video/upload/v1554628407/coolSchool/web/countdown-sound.mp3\";\n    _this.audio = new Audio(_this.url);\n\n    _this.handleTimeInput = function (event) {\n      console.log(\"event=>\", event);\n\n      _this.setState({\n        timeInputValue: event.target.value\n      });\n    };\n\n    _this.handleButton = function (event) {\n      if (!_this.state.isRunning && _this.state.buttonText === \"start\") {\n        var playerTime = _this.state.timeInputValue * 60;\n\n        _this.setState({\n          instructions: \"You can pause or reset the timer at any time.\",\n          disableTimeInput: true,\n          playerTime: playerTime,\n          buttonText: \"pause\",\n          mountTimer: true,\n          isRunning: true,\n          mountReset: true\n        });\n\n        if (_this.state.timeInputValue < 10) {\n          _this.setState({\n            min: \"0\" + _this.state.timeInputValue\n          });\n        } else {\n          _this.setState({\n            min: _this.state.timeInputValue\n          });\n        }\n\n        _this.runTimer();\n      } else if (_this.state.isRunning && _this.state.buttonText === \"pause\") {\n        _this.stopTimer();\n\n        _this.setState({\n          instructions: \"The timer has been paused, press resume to continue.\",\n          isRunning: false,\n          buttonText: \"resume\"\n        });\n      } else if (!_this.state.isRunning && _this.state.buttonText === \"resume\") {\n        _this.runTimer();\n\n        _this.setState({\n          instructions: \"You can pause or reset the timer at any time.\",\n          isRunning: true,\n          buttonText: \"pause\"\n        });\n      } else if (_this.state.isRunning && _this.state.buttonText === \"new timer\") {\n        _this.audio.pause();\n\n        _this.setState({\n          instructions: \"Set the timer below and press start to begin.\",\n          isRunning: false,\n          buttonText: \"start\",\n          disableTimeInput: false,\n          mountTimer: false,\n          sec: \"00\"\n        });\n      }\n    };\n\n    _this.handleReset = function () {\n      window.clearInterval(_this.interval);\n\n      _this.setState({\n        instructions: \"Set the timer below and press start to begin.\",\n        min: \"\",\n        sec: \"00\",\n        timeInputValue: 10,\n        disableTimeInput: false,\n        playerTime: \"\",\n        buttonText: \"start\",\n        mountTimer: false,\n        isRunning: false,\n        mountReset: false\n      });\n    };\n\n    _this.runTimer = function () {\n      _this.interval = setInterval(function () {\n        _this.setState({\n          playerTime: _this.state.playerTime -= 1\n        });\n\n        var startTime = _this.state.playerTime / 60;\n        var m = Math.floor(startTime);\n        var min;\n\n        if (m < 10) {\n          min = \"0\" + m;\n        } else {\n          min = m;\n        }\n\n        var s = Math.round((startTime - m) * 60);\n        var sec;\n\n        if (s < 10) {\n          sec = \"0\" + s;\n        } else {\n          sec = s;\n        }\n\n        if (_this.state.playerTime < 1) {\n          _this.audio.loop = true;\n\n          _this.audio.play();\n\n          window.clearInterval(_this.interval);\n\n          _this.setState({\n            instructions: \"Time's up! Don't forget to turn off the oven!\",\n            buttonText: \"new timer\",\n            mountReset: false\n          });\n        }\n\n        _this.setState({\n          min: min,\n          sec: sec,\n          isRunning: true\n        });\n      }, 1000);\n    };\n\n    _this.stopTimer = function () {\n      window.clearInterval(_this.interval);\n    };\n\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          chronometer = _this$state.chronometer,\n          countdown = _this$state.countdown;\n      var timer;\n\n      if (this.state.mountTimer) {\n        timer = React.createElement(TimerT, {\n          min: this.state.min,\n          sec: this.state.sec,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        });\n      } else {\n        timer = \"\";\n      }\n\n      var timerInput;\n\n      if (!this.state.disableTimeInput) {\n        timerInput = React.createElement(TimeInput, {\n          value: this.state.timeInputValue,\n          handleChange: this.handleTimeInput,\n          sec: this.state.sec,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        });\n      } else {\n        timerInput = \"\";\n      }\n\n      var disableButton;\n\n      if (this.state.timeInputValue > 0) {\n        disableButton = false;\n      } else {\n        disableButton = true;\n      }\n\n      var reset;\n\n      if (this.state.mountReset) {\n        reset = React.createElement(Reset, {\n          handleReset: this.handleReset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        });\n      } else {\n        reset = \"\";\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container-timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: \"btn-group-timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            countdown: !countdown,\n            chronometer: false\n          });\n        },\n        \"aria-controls\": \"collapse-countdown\",\n        \"aria-expanded\": countdown,\n        variant: \"outline-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Countdown\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            chronometer: !chronometer,\n            countdown: false\n          });\n        },\n        \"aria-controls\": \"collapse-chronometer\",\n        \"aria-expanded\": chronometer,\n        variant: \"outline-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Chronometer\")), React.createElement(Collapse, {\n        in: this.state.countdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"collapse-countdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"timerBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, timer, timerInput, React.createElement(\"div\", {\n        id: \"buttonContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(ButtonB, {\n        buttonText: this.state.buttonText,\n        handleButton: this.handleButton,\n        enable: disableButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), reset)))), React.createElement(Collapse, {\n        in: this.state.chronometer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"collapse-chronometer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Chronometer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Timer;\n}(Component);\n\nexport default Timer;","map":{"version":3,"sources":["/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/timer/Timer.js"],"names":["React","Component","Collapse","Button","ButtonGroup","Nav","Chronometer","Countdown","NavTimer","TimerT","props","min","sec","TimeInput","console","log","enable","value","handleChange","ButtonB","handleButton","buttonText","Reset","handleReset","Timer","state","show","chronometer","countdown","timeInputValue","disableTimeInput","playerTime","mountTimer","isRunning","mountReset","url","audio","Audio","handleTimeInput","event","setState","target","instructions","runTimer","stopTimer","pause","window","clearInterval","interval","setInterval","startTime","m","Math","floor","s","round","loop","play","timer","timerInput","disableButton","reset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Button, ButtonGroup, Nav } from 'react-bootstrap';\nimport Chronometer from './Chronometer';\nimport Countdown from './Countdown';\nimport NavTimer from './NavTimer';\n\nconst TimerT = (props) => {\n  return (\n    <div>\n      <span className=\"time\">{props.min}</span>\n      <span>:</span>\n      <span>{props.sec}</span>\n    </div>\n  );\n}\n\nconst TimeInput = (props) => {\n  console.log(\"props\", props)\n  return (\n    <div id=\"timerInput\">\n      <input name=\"timeInputValue\" type=\"number\" min=\"1\" max=\"99\" disabled={props.enable} value={props.value} onChange={props.handleChange}/>\n      <span>:</span>\n      <span>{props.sec}</span>\n    </div>\n  );\n}\n\nconst ButtonB = (props) => {\n  return (\n    <button disabled={props.enable} onClick={props.handleButton}>{props.buttonText}</button>\n  );\n}\n\nconst Reset = (props) => {\n  return (\n    <button id=\"reset\" onClick={props.handleReset}>reset</button>\n  );\n}\n\nclass Timer extends Component{\n\n  state ={\n    show: false,\n    chronometer: false,\n    countdown: false,\n    min: \"\",\n    sec: \"00\",\n    timeInputValue: 10,\n    disableTimeInput: false,\n    playerTime: \"\",\n    buttonText: \"start\",\n    mountTimer: false,\n    isRunning: false,\n    mountReset: false\n  }\n\n  url = \"https://res.cloudinary.com/dkgr9dg9n/video/upload/v1554628407/coolSchool/web/countdown-sound.mp3\";\n  audio = new Audio(this.url);\n\n  handleTimeInput = (event) => {\n    console.log(\"event=>\", event)\n    this.setState({\n      timeInputValue: event.target.value\n    });\n  }\n\n  handleButton = (event) => {\n    if (!this.state.isRunning && (this.state.buttonText === \"start\")) {\n      const playerTime = (this.state.timeInputValue * 60);\n      this.setState({\n        instructions: \"You can pause or reset the timer at any time.\",\n        disableTimeInput: true,\n        playerTime: playerTime,\n        buttonText: \"pause\",\n        mountTimer: true,\n        isRunning: true,\n        mountReset: true,\n      });\n      if (this.state.timeInputValue < 10) {\n        this.setState({\n          min: \"0\" + this.state.timeInputValue\n        });\n      } else {\n        this.setState({\n          min: this.state.timeInputValue\n        });\n      }\n      this.runTimer();\n    } else if (this.state.isRunning && (this.state.buttonText === \"pause\")) {\n      this.stopTimer();\n      this.setState({\n        instructions: \"The timer has been paused, press resume to continue.\",\n        isRunning: false,\n        buttonText: \"resume\"\n      });\n    } else if (!this.state.isRunning && (this.state.buttonText === \"resume\")) {\n      this.runTimer();\n      this.setState({\n        instructions: \"You can pause or reset the timer at any time.\",\n        isRunning: true,\n        buttonText: \"pause\"\n      });\n    } else if (this.state.isRunning && (this.state.buttonText === \"new timer\")) {\n      this.audio.pause();\n      this.setState({\n        instructions: \"Set the timer below and press start to begin.\",\n        isRunning: false,\n        buttonText: \"start\",\n        disableTimeInput: false,\n        mountTimer: false,\n        sec: \"00\"\n      });\n    }\n  }\n  \n  handleReset = () => {\n    window.clearInterval(this.interval);\n    this.setState({\n      instructions: \"Set the timer below and press start to begin.\",\n      min: \"\",\n      sec: \"00\",\n      timeInputValue: 10,\n      disableTimeInput: false,\n      playerTime: \"\",\n      buttonText: \"start\",\n      mountTimer: false,\n      isRunning: false,\n      mountReset: false,\n    });\n  }\n\n  runTimer = () => {\n    this.interval = setInterval( () => {\n      this.setState({\n        playerTime: this.state.playerTime -=1\n      });\n      let startTime = this.state.playerTime / 60;\n      let m = Math.floor(startTime);\n      let min;\n      if (m < 10) {\n        min = \"0\" + m;\n      } else {\n        min = m;\n      }\n      let s = Math.round((startTime - m) * 60);\n      let sec;\n      if (s < 10) {\n        sec = \"0\" + s;\n      } else {\n        sec = s;\n      }\n      if (this.state.playerTime < 1) {\n        this.audio.loop = true;\n        this.audio.play();\n        window.clearInterval(this.interval);\n        this.setState({\n          instructions: \"Time's up! Don't forget to turn off the oven!\",\n          buttonText: \"new timer\",\n          mountReset: false\n        });\n      }\n      this.setState({\n        min: min,\n        sec: sec,\n        isRunning: true\n      });\n    }, 1000);\n  }\n  \n  stopTimer = () => {\n    window.clearInterval(this.interval);\n  }\n\n\n  render(){\n    const { chronometer, countdown } = this.state;\n    let timer;\n    if (this.state.mountTimer) {\n      timer = <TimerT min={this.state.min} sec={this.state.sec} />;\n    } else {\n      timer = \"\";\n    }\n    let timerInput;\n    if (!this.state.disableTimeInput) {\n        timerInput = <TimeInput value={this.state.timeInputValue} handleChange={this.handleTimeInput} sec={this.state.sec} />;\n    } else {\n      timerInput = \"\";\n    }\n    let disableButton;\n    if (this.state.timeInputValue > 0) {\n      disableButton = false;\n    } else {\n      disableButton = true;\n    }\n    let reset;\n    if (this.state.mountReset) {\n      reset = <Reset handleReset={this.handleReset} />;\n    } else {\n      reset = \"\";\n    }\n\n    return(\n      \n      <div className=\"container-timer\">\n        <ButtonGroup className=\"btn-group-timer\">\n        <Button\n          onClick={() => this.setState({ countdown: !countdown, chronometer: false })}\n          aria-controls=\"collapse-countdown\"\n          aria-expanded={countdown}\n          variant=\"outline-secondary\"\n        >\n          Countdown\n        </Button>\n        <Button\n          onClick={() => this.setState({ chronometer: !chronometer, countdown: false })}\n          aria-controls=\"collapse-chronometer\"\n          aria-expanded={chronometer}\n          variant=\"outline-secondary\"\n        >\n          Chronometer\n        </Button>\n      </ButtonGroup>\n      <Collapse in={this.state.countdown}>\n        <div id=\"collapse-countdown\">\n          <div id=\"timerBody\" >\n          {timer}\n          {timerInput}\n          <div id=\"buttonContainer\">\n            <ButtonB buttonText={this.state.buttonText} handleButton={this.handleButton} enable={disableButton} />\n            {reset}\n          </div>\n        </div>\n        </div>\n        \n      </Collapse>\n      <Collapse in={this.state.chronometer}>\n        <div id=\"collapse-chronometer\">\n          <Chronometer />\n        </div>\n      </Collapse>\n    </div>\n    )\n  }\n}\n\nexport default Timer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}