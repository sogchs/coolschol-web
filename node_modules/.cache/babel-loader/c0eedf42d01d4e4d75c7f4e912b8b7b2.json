{"ast":null,"code":"import _toConsumableArray from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/Groups/NewGroup.js\";\nimport React, { Component } from 'react';\nimport groupService from '../../services/group-service';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport { Modal, Button } from 'react-bootstrap';\nimport Select from 'react-select';\nvar validations = {\n  title: function title(value) {\n    var message;\n\n    if (!value) {\n      message = 'Some message is required';\n    }\n\n    return message;\n  }\n};\n\nvar NewGroup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewGroup, _Component);\n\n  function NewGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      group: {\n        title: '',\n        subgroups: {\n          'group-1': []\n        }\n      },\n      errors: {\n        title: validations.title()\n      },\n      touch: {},\n      show: false,\n      selectedOption: '',\n      selectedOption2: '',\n      options: [],\n      selectableOptions: []\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState({\n        classroom: _objectSpread({}, _this.state.classroom, _defineProperty({}, name, value)),\n        errors: _objectSpread({}, _this.state.errors, _defineProperty({}, name, validations[name] && validations[name](value)))\n      });\n    };\n\n    _this.handleSubgroupSelect = function (options, _ref) {\n      var name = _ref.name;\n      var value = options.map(function (o) {\n        return o.value;\n      });\n\n      _this.setState({\n        group: _objectSpread({}, _this.state.group, {\n          subgroups: _objectSpread({}, _this.state.group.subgroups, _defineProperty({}, name, value))\n        })\n      }, function () {\n        var currentValues = [];\n\n        var _arr = Object.values(_this.state.group.subgroups);\n\n        for (var _i = 0; _i < _arr.length; _i++) {\n          var subgroup = _arr[_i];\n          currentValues = [].concat(_toConsumableArray(currentValues), _toConsumableArray(subgroup));\n        }\n\n        var filteredOptions = _this.state.options.filter(function (option) {\n          return !currentValues.some(function (selected) {\n            return option.value === selected;\n          });\n        });\n\n        _this.setState({\n          selectableOptions: filteredOptions\n        });\n      });\n    };\n\n    _this.handleBLur = function (event) {\n      var name = event.target.name;\n\n      _this.setState(_objectSpread({}, _this.state.touch, _defineProperty({}, name, true)));\n    };\n\n    _this.handleAddSubgroup = function () {\n      var name = \"group-\".concat(Object.keys(_this.state.group.subgroups).length + 1);\n\n      _this.setState({\n        group: _objectSpread({}, _this.state.group, {\n          subgroups: _objectSpread({}, _this.state.group.subgroups, _defineProperty({}, name, []))\n        })\n      });\n    };\n\n    _this.createClassroom = function (event) {\n      event.preventDefault();\n\n      var classroomData = _objectSpread({}, _this.state.classroom, {\n        teachers: _this.props.user.id\n      });\n\n      groupService.createClassroom(classroomData).then(_this.props.fetchClassrooms).then(_this.setState({\n        show: false\n      }));\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        show: false\n      });\n    };\n\n    _this.handleShow = function () {\n      _this.setState({\n        show: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewGroup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var opt = this.props.classroom.students.map(function (student) {\n        return {\n          value: student.name,\n          label: student.name\n        };\n      });\n      this.setState({\n        options: opt,\n        selectableOptions: opt\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          group = _this$state.group,\n          touch = _this$state.touch,\n          errors = _this$state.errors,\n          show = _this$state.show;\n      var subgroups = group.subgroups;\n      console.log(subgroups);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-info new-classroom-btn\",\n        onClick: this.handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"+ New Group\"), React.createElement(Modal, {\n        show: show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Create a new Group\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.createClassroom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"nameGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Group name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm \".concat(touch.title ? errors.title ? 'is-invalid' : 'is-valid' : ''),\n        id: \"nameGroup\",\n        value: group.title,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        name: \"title\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"\",\n        onClick: this.handleAddSubgroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"+ Add Subgroup\"), Object.keys(subgroups).map(function (name) {\n        return React.createElement(Select, {\n          key: name,\n          name: name,\n          value: subgroups['name'],\n          onChange: _this2.handleSubgroupSelect,\n          options: _this2.state.selectableOptions,\n          isMulti: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        });\n      }))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"info\",\n        onClick: this.createClassroom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Create\"))));\n    }\n  }]);\n\n  return NewGroup;\n}(Component);\n\nexport default withAuthConsumer(NewGroup);","map":{"version":3,"sources":["/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/Groups/NewGroup.js"],"names":["React","Component","groupService","withAuthConsumer","Modal","Button","Select","validations","title","value","message","NewGroup","state","group","subgroups","errors","touch","show","selectedOption","selectedOption2","options","selectableOptions","handleChange","event","target","name","setState","classroom","handleSubgroupSelect","map","o","currentValues","Object","values","subgroup","filteredOptions","filter","option","some","selected","handleBLur","handleAddSubgroup","keys","length","createClassroom","preventDefault","classroomData","teachers","props","user","id","then","fetchClassrooms","handleClose","handleShow","opt","students","student","label","console","log","handleBlur"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport groupService from '../../services/group-service'\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport { Modal, Button } from 'react-bootstrap';\n\nimport Select from 'react-select';\n\n\nconst validations = {\n  title: (value) => {\n  let message;\n  if(!value){\n    message = 'Some message is required'\n  }\n  return message;\n}}\nclass NewGroup extends Component {\n  \n  state = {\n    group: {\n      title: '',\n      subgroups: {\n        'group-1': []\n      }\n    },\n    errors: {\n      title: validations.title()\n    },\n    touch: {},\n    show: false,\n    selectedOption: '',\n    selectedOption2: '',\n    options: [],\n    selectableOptions:[]\n  }\n\n  handleChange = (event) => {\n\n    const { name, value } = event.target;\n\n    this.setState({ \n      classroom: {\n        ...this.state.classroom,\n        [name]: value\n      },\n      errors: {\n        ...this.state.errors,\n        [name]: validations[name] && validations[name](value)\n      }\n    })\n  }\n\n  handleSubgroupSelect = (options, { name }) => {\n    const value = options.map(o => o.value)\n    this.setState({\n      group: {\n        ...this.state.group,\n        subgroups: {\n          ...this.state.group.subgroups,\n          [name]: value\n        }\n      }\n    }, () => {\n      let currentValues = [];\n      for (let subgroup of Object.values(this.state.group.subgroups)) {\n        currentValues = [\n          ...currentValues,\n          ...subgroup\n        ]\n      }\n      const filteredOptions = this.state.options.filter(option => \n        !currentValues.some(selected => option.value === selected)\n      )\n      this.setState({ selectableOptions: filteredOptions })\n    });\n  }\n\n  handleBLur = (event) => {\n    const { name } = event.target;\n  \n    this.setState({\n      ...this.state.touch,\n      [name]: true\n    })\n  }\n\n  handleAddSubgroup = () => {\n    const name = `group-${Object.keys(this.state.group.subgroups).length + 1}`\n    this.setState({\n      group: {\n        ...this.state.group,\n        subgroups: {\n          ...this.state.group.subgroups,\n          [name]: []\n        }\n      }\n    })\n  }\n\n  createClassroom = (event) => {\n    event.preventDefault();\n    \n    const classroomData = {\n      ...this.state.classroom,\n      teachers: this.props.user.id\n    }\n    groupService.createClassroom(classroomData)\n    .then(this.props.fetchClassrooms)\n    .then(this.setState({ show: false }))\n  }\n\n  handleClose = () => {this.setState({ show: false });}\n\n  handleShow = () => {this.setState({ show: true });}\n\n  componentDidMount(){\n    const opt = this.props.classroom.students\n      .map(student => { return { value: student.name, label: student.name } })\n    this.setState({\n      options: opt,\n      selectableOptions: opt \n    })\n  }\n\n  render() {\n    const { group, touch, errors, show } = this.state;\n    const subgroups = group.subgroups;\n\n    \n    console.log(subgroups)\n    \n    return(\n      <div>\n          <Button variant=\"outline-info new-classroom-btn\" onClick={this.handleShow}>+ New Group</Button>\n\n          <Modal show={show} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Create a new Group</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <form onSubmit={this.createClassroom}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"nameGroup\">Group name</label>\n                  <input type=\"text\" \n                    className={`form-control form-control-sm ${touch.title ? (errors.title ? 'is-invalid' : 'is-valid') : ''}`} \n                    id=\"nameGroup\"\n                    value={group.title} \n                    onChange={this.handleChange}\n                    onBlur={this.handleBlur}\n                    name=\"title\"\n                    autoComplete=\"off\"\n                    />\n                </div>\n                <Button className=\"\" onClick={this.handleAddSubgroup}>+ Add Subgroup</Button>\n                {Object.keys(subgroups).map(name =>\n                  (<Select\n                    key={name}\n                    name={name}\n                    value={subgroups['name']}\n                    onChange={this.handleSubgroupSelect}\n                    options={this.state.selectableOptions}\n                    isMulti\n                  />\n                  \n                  ))}\n              </form>\n            </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"info\" onClick={this.createClassroom}>Create</Button>\n              </Modal.Footer>\n          </Modal>\n      </div>\n    )\n  }\n}\n\nexport default withAuthConsumer(NewGroup) ;"]},"metadata":{},"sourceType":"module"}