{"ast":null,"code":"import _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/timer/Countdown.js\";\nimport React, { Component } from 'react';\n\nvar Countdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Countdown, _Component);\n\n  function Countdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Countdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Countdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0,\n      countdownStatus: 'stopped'\n    };\n\n    _this.startTimer = function () {\n      _this.timer = setInterval(function () {\n        var newCount = _this.state.count - 1;\n\n        _this.setState({\n          count: newCount >= 0 ? newCount : 0\n        });\n      }, 1000);\n    };\n\n    _this.handleSetCountdown = function (seconds) {\n      _this.setState({\n        count: seconds,\n        countdownStatus: 'started'\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      console.log(e);\n      e.preventDefault();\n      var strSeconds = _this.refs.seconds.value;\n\n      if (strSeconds.match(/^[0-9]*$/)) {\n        _this.refs.seconds.value = '';\n\n        _this.handleSetCountdown(parseInt(strSeconds, 10));\n      }\n    };\n\n    _this.formatSeconds = function (totalSeconds) {\n      var seconds = totalSeconds % 60;\n      var minutes = Math.floor(totalSeconds / 60);\n\n      if (seconds < 10) {\n        seconds = '0' + seconds;\n      }\n\n      if (minutes < 10) {\n        minutes = '0' + minutes;\n      }\n\n      return minutes + ':' + seconds;\n    };\n\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.countdownStatus !== prevState.countdownStatus) {\n        switch (this.state.countdownStatus) {\n          case 'started':\n            this.startTimer();\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var count = this.state.count;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"clock-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.formatSeconds(count)), React.createElement(\"form\", {\n        ref: \"form\",\n        onSubmit: this.onSubmit,\n        className: \"countdown-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"seconds\",\n        placeholder: \"Enter time in seconds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Start\"))));\n    }\n  }]);\n\n  return Countdown;\n}(Component);\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/timer/Countdown.js"],"names":["React","Component","Countdown","state","count","countdownStatus","startTimer","timer","setInterval","newCount","setState","handleSetCountdown","seconds","onSubmit","e","console","log","preventDefault","strSeconds","refs","value","match","parseInt","formatSeconds","totalSeconds","minutes","Math","floor","prevProps","prevState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,S;;;;;;;;;;;;;;;;;UAEJC,K,GAAO;AACLC,MAAAA,KAAK,EAAE,CADF;AAELC,MAAAA,eAAe,EAAE;AAFZ,K;;UAePC,U,GAAa,YAAM;AACjB,YAAKC,KAAL,GAAaC,WAAW,CAAC,YAAI;AAC3B,YAAIC,QAAQ,GAAG,MAAKN,KAAL,CAAWC,KAAX,GAAmB,CAAlC;;AACA,cAAKM,QAAL,CAAc;AACZN,UAAAA,KAAK,EAAEK,QAAQ,IAAI,CAAZ,GAAgBA,QAAhB,GAA2B;AADtB,SAAd;AAGD,OALuB,EAKrB,IALqB,CAAxB;AAMD,K;;UAEDE,kB,GAAqB,UAACC,OAAD,EAAa;AAChC,YAAKF,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAEQ,OADK;AAEZP,QAAAA,eAAe,EAAE;AAFL,OAAd;AAID,K;;UAEDQ,Q,GAAW,UAACC,CAAD,EAAO;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAA,MAAAA,CAAC,CAACG,cAAF;AACA,UAAMC,UAAU,GAAG,MAAKC,IAAL,CAAUP,OAAV,CAAkBQ,KAArC;;AAEA,UAAIF,UAAU,CAACG,KAAX,CAAiB,UAAjB,CAAJ,EAAkC;AAChC,cAAKF,IAAL,CAAUP,OAAV,CAAkBQ,KAAlB,GAA0B,EAA1B;;AACA,cAAKT,kBAAL,CAAwBW,QAAQ,CAACJ,UAAD,EAAa,EAAb,CAAhC;AACD;AACF,K;;UAGDK,a,GAAgB,UAACC,YAAD,EAAkB;AAChC,UAAIZ,OAAO,GAAGY,YAAY,GAAG,EAA7B;AACA,UAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAY,GAAG,EAA1B,CAAd;;AAEA,UAAIZ,OAAO,GAAG,EAAd,EAAkB;AACfA,QAAAA,OAAO,GAAG,MAAMA,OAAhB;AACF;;AAED,UAAIa,OAAO,GAAG,EAAd,EAAkB;AACfA,QAAAA,OAAO,GAAG,MAAMA,OAAhB;AACF;;AAED,aAAOA,OAAO,GAAG,GAAV,GAAgBb,OAAvB;AACD,K;;;;;;;uCAnDmBgB,S,EAAWC,S,EAAU;AACvC,UAAG,KAAK1B,KAAL,CAAWE,eAAX,KAA+BwB,SAAS,CAACxB,eAA5C,EAA4D;AAC1D,gBAAO,KAAKF,KAAL,CAAWE,eAAlB;AACE,eAAK,SAAL;AACE,iBAAKC,UAAL;AACA;AAHJ;AAKD;AACF;;;6BA6CO;AAAA,UACCF,KADD,GACU,KAAKD,KADf,CACCC,KADD;AAEN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKmB,aAAL,CAAmBnB,KAAnB,CADH,CADA,EAIA;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,QAAQ,EAAE,KAAKS,QAAhC;AAA0C,QAAA,SAAS,EAAC,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC,SAAvB;AAAiC,QAAA,WAAW,EAAC,uBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFG,EAGE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CAJA,CADF,CADF;AAgBD;;;;EA9EqBZ,S;;AAgFxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Countdown extends Component{\n\n  state ={\n    count: 0,\n    countdownStatus: 'stopped'\n  }\n\n  componentDidUpdate (prevProps, prevState){\n    if(this.state.countdownStatus !== prevState.countdownStatus){\n      switch(this.state.countdownStatus){\n        case 'started':\n          this.startTimer();\n          break;\n      }\n    }\n  }\n\n  startTimer = () => {\n    this.timer = setInterval(()=>{\n      var newCount = this.state.count - 1;\n      this.setState({\n        count: newCount >= 0 ? newCount : 0\n      });\n    }, 1000);\n  }\n\n  handleSetCountdown = (seconds) => {\n    this.setState({\n      count: seconds,\n      countdownStatus: 'started'\n    });\n  }\n\n  onSubmit = (e) => {\n    console.log(e)\n    e.preventDefault();\n    const strSeconds = this.refs.seconds.value;\n\n    if (strSeconds.match(/^[0-9]*$/)) {\n      this.refs.seconds.value = '';\n      this.handleSetCountdown(parseInt(strSeconds, 10));\n    }\n  }\n\n  \n  formatSeconds = (totalSeconds) => {\n    let seconds = totalSeconds % 60;\n    let minutes = Math.floor(totalSeconds / 60);\n\n    if (seconds < 10) {\n       seconds = '0' + seconds;\n    }\n\n    if (minutes < 10) {\n       minutes = '0' + minutes;\n    }\n\n    return minutes + ':' + seconds;\n  }\n\n  render(){\n    const {count} = this.state;\n    return(\n      <div>\n        <div>\n        <span className=\"clock-text\">\n          {this.formatSeconds(count)}\n        </span>\n        <form ref=\"form\" onSubmit={this.onSubmit} className=\"countdown-form\">\n          <input type=\"text\" ref=\"seconds\" placeholder=\"Enter time in seconds\"/>\n\t\t\t\t\t<br/>\n          <button className=\"btn-start\">Start</button>\n        </form>\n      </div>\n\n      </div>\n\n    )\n  }\n}\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}