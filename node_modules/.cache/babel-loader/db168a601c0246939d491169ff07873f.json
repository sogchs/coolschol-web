{"ast":null,"code":"import _defineProperty from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/chat/Conversation.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport chatService from '../../services/chat-service';\nvar validations = {\n  content: function content(value) {\n    var message;\n\n    if (!value) {\n      message = 'Some message is required';\n    }\n\n    return message;\n  }\n};\n\nvar Conversation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Conversation, _Component);\n\n  function Conversation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Conversation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Conversation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      message: {\n        content: '',\n        recipient: _this.props.id,\n        sender: _this.props.localUser.id\n      },\n      errors: {\n        content: validations.content()\n      },\n      touch: {}\n    };\n\n    _this.handleChange = function (event) {\n      var _objectSpread2;\n\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState({\n        message: _objectSpread({}, _this.state.message, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, value), _defineProperty(_objectSpread2, \"recipient\", _this.props.id), _objectSpread2)),\n        errors: _objectSpread({}, _this.state.errors, _defineProperty({}, name, validations[name] && validations[name](value)))\n      });\n    };\n\n    _this.handleBLur = function (event) {\n      var name = event.target.name;\n\n      _this.setState(_objectSpread({}, _this.state.touch, _defineProperty({}, name, true)));\n    };\n\n    _this.createMessage = function (event) {\n      event.preventDefault();\n      chatService.createMessage(_this.state.message).then(_this.setState({\n        message: {\n          content: ''\n        }\n      })).then(_this.renderMessages());\n    };\n\n    return _this;\n  }\n\n  _createClass(Conversation, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"conversation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"server-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.imageURL,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.props.name), React.createElement(Button, {\n        onClick: this.props.hideConversation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"x\")), React.createElement(\"div\", {\n        className: \"chat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"conversation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-r\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Texto del receptor\"), this.props.messages.map(function (message) {\n        return React.createElement(\"div\", {\n          key: message.id,\n          className: \" \".concat(message.sender === _this2.props.id ? 'message-s' : 'message-r', \"  }\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, message.content);\n      })), React.createElement(\"form\", {\n        className: \"write\",\n        onSubmit: this.createMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm \".concat(this.state.touch.conversation ? this.state.errors.conversation ? 'is-invalid' : 'is-valid' : ''),\n        name: \"content\",\n        value: this.state.message.content,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.errors.content), React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-info\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-space-shuttle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Conversation;\n}(Component);\n\nexport default Conversation;","map":{"version":3,"sources":["/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/chat/Conversation.js"],"names":["React","Component","Button","chatService","validations","content","value","message","Conversation","state","recipient","props","id","sender","localUser","errors","touch","handleChange","event","target","name","setState","handleBLur","createMessage","preventDefault","then","renderMessages","imageURL","hideConversation","messages","map","conversation","handleBlur"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport chatService from '../../services/chat-service';\n\nconst validations = {\n  content: (value) => {\n  let message;\n  if(!value){\n    message = 'Some message is required'\n  }\n  return message;\n}}\n\nclass Conversation extends Component {\n\n  state = {\n    message: {\n      content: '',\n      recipient: this.props.id,\n      sender:this.props.localUser.id\n\n    },\n    errors: {\n      content: validations.content()\n    },\n    touch: {},\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      message: {\n        ...this.state.message,\n        [name]: value,\n        recipient: this.props.id\n      },\n      errors: {\n        ...this.state.errors,\n        [name]: validations[name] && validations[name](value)\n      }\n    })\n  }\n  handleBLur = (event) => {\n    const { name } = event.target;\n  \n    this.setState({\n      ...this.state.touch,\n      [name]: true\n    })\n    \n  }\n\n\n  createMessage = (event) =>{\n    event.preventDefault();\n\n   \n    chatService.createMessage(this.state.message)\n    .then(this.setState({message:{content:''}}))\n    .then(this.renderMessages())\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"conversation\">\n        <div className=\"server-card\">\n            <img src={this.props.imageURL} alt=\"\"/>\n            <p>{this.props.name}</p>\n            <Button onClick={this.props.hideConversation}>x</Button>\n        </div>\n        <div className=\"chat\">\n            <div className=\"conversation\">\n                <div className=\"message-r\">\n                    Texto del receptor\n                </div>\n                {this.props.messages.map(message => (\n                <div key={message.id} className={` ${message.sender === this.props.id ? 'message-s' : 'message-r'}  }`}>\n                    {message.content}\n                </div>\n                ))}\n            </div>\n            <form className=\"write\" onSubmit={this.createMessage}>\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" \n                    className={`form-control form-control-sm ${this.state.touch.conversation ? (this.state.errors.conversation ? 'is-invalid' : 'is-valid') : ''}`} \n                    name=\"content\"\n                    value={this.state.message.content}\n                    onChange={this.handleChange}\n                    onBlur={this.handleBlur}\n                    autoComplete=\"off\"\n                    />\n                    <div className=\"invalid-feedback\">{this.state.errors.content}</div>\n                    <div className=\"input-group-append\">\n                        <button className=\"btn btn-outline-info\" type=\"submit\"><i className=\"fas fa-space-shuttle\"></i></button>\n                    </div>\n                </div>\n            </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Conversation ;"]},"metadata":{},"sourceType":"module"}