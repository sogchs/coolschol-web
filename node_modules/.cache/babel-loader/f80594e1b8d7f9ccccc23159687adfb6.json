{"ast":null,"code":"import _toConsumableArray from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/Groups/NewGroup.js\";\nimport React, { Component } from 'react';\nimport groupService from '../../services/group-service';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport { Modal, Button } from 'react-bootstrap';\nimport Select from 'react-select';\nvar validations = {\n  title: function title(value) {\n    var message;\n\n    if (!value) {\n      message = 'Some message is required';\n    }\n\n    return message;\n  }\n};\n\nvar NewGroup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewGroup, _Component);\n\n  function NewGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      group: {\n        title: '',\n        subgroups: {\n          'group-1': []\n        },\n        classroom: _this.props.classroom.id\n      },\n      errors: {\n        title: validations.title()\n      },\n      touch: {},\n      show: false,\n      selectedOption: '',\n      selectedOption2: '',\n      options: [],\n      selectableOptions: []\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState({\n        group: _objectSpread({}, _this.state.group, _defineProperty({}, name, value)),\n        errors: _objectSpread({}, _this.state.errors, _defineProperty({}, name, validations[name] && validations[name](value)))\n      });\n    };\n\n    _this.handleSubgroupSelect = function (options, _ref) {\n      var name = _ref.name;\n      var value = options.map(function (o) {\n        return o.value;\n      });\n\n      _this.setState({\n        group: _objectSpread({}, _this.state.group, {\n          subgroups: _objectSpread({}, _this.state.group.subgroups, _defineProperty({}, name, value))\n        })\n      }, function () {\n        var currentValues = [];\n\n        var _arr = Object.values(_this.state.group.subgroups);\n\n        for (var _i = 0; _i < _arr.length; _i++) {\n          var subgroup = _arr[_i];\n          currentValues = [].concat(_toConsumableArray(currentValues), _toConsumableArray(subgroup));\n        }\n\n        var filteredOptions = _this.state.options.filter(function (option) {\n          return !currentValues.some(function (selected) {\n            return option.value === selected;\n          });\n        });\n\n        _this.setState({\n          selectableOptions: filteredOptions\n        });\n      });\n    };\n\n    _this.handleBLur = function (event) {\n      var name = event.target.name;\n\n      _this.setState(_objectSpread({}, _this.state.touch, _defineProperty({}, name, true)));\n    };\n\n    _this.handleAddSubgroup = function () {\n      var name = \"group-\".concat(Object.keys(_this.state.group.subgroups).length + 1);\n\n      _this.setState({\n        group: _objectSpread({}, _this.state.group, {\n          subgroups: _objectSpread({}, _this.state.group.subgroups, _defineProperty({}, name, []))\n        })\n      });\n    };\n\n    _this.createGroup = function (event) {\n      event.preventDefault();\n\n      var groupData = _objectSpread({}, _this.state.group);\n\n      groupService.createClassroom(groupData).then(_this.props.fetchGroups).then(_this.setState({\n        show: false\n      }));\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        show: false\n      });\n    };\n\n    _this.handleShow = function () {\n      _this.setState({\n        show: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewGroup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var opt = this.props.classroom.students.map(function (student) {\n        return {\n          value: student.name,\n          label: student.name\n        };\n      });\n      this.setState({\n        options: opt,\n        selectableOptions: opt\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          group = _this$state.group,\n          touch = _this$state.touch,\n          errors = _this$state.errors,\n          show = _this$state.show;\n      var subgroups = group.subgroups;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-info new-classroom-btn\",\n        onClick: this.handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"+ New Group\"), React.createElement(Modal, {\n        show: show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Create a new Group\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"nameGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Group name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm \".concat(touch.title ? errors.title ? 'is-invalid' : 'is-valid' : ''),\n        id: \"nameGroup\",\n        value: group.title,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        name: \"title\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"btn-addSubgroup\",\n        onClick: this.handleAddSubgroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"+ Add Subgroup\"), Object.keys(subgroups).map(function (name) {\n        return React.createElement(Select, {\n          className: \"mt-2\",\n          key: name,\n          name: name,\n          value: subgroups['name'],\n          onChange: _this2.handleSubgroupSelect,\n          options: _this2.state.selectableOptions,\n          isMulti: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        });\n      }))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"info\",\n        onClick: this.createGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Create\"))));\n    }\n  }]);\n\n  return NewGroup;\n}(Component);\n\nexport default withAuthConsumer(NewGroup);","map":{"version":3,"sources":["/Users/sergioortega/Desktop/coolSchool/web-coolSchool/src/components/Groups/NewGroup.js"],"names":["React","Component","groupService","withAuthConsumer","Modal","Button","Select","validations","title","value","message","NewGroup","state","group","subgroups","classroom","props","id","errors","touch","show","selectedOption","selectedOption2","options","selectableOptions","handleChange","event","target","name","setState","handleSubgroupSelect","map","o","currentValues","Object","values","subgroup","filteredOptions","filter","option","some","selected","handleBLur","handleAddSubgroup","keys","length","createGroup","preventDefault","groupData","createClassroom","then","fetchGroups","handleClose","handleShow","opt","students","student","label","handleBlur"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport groupService from '../../services/group-service'\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport { Modal, Button } from 'react-bootstrap';\n\nimport Select from 'react-select';\n\n\nconst validations = {\n  title: (value) => {\n  let message;\n  if(!value){\n    message = 'Some message is required'\n  }\n  return message;\n}}\nclass NewGroup extends Component {\n  \n  state = {\n    group: {\n      title: '',\n      subgroups: {\n        'group-1': []\n      },\n      classroom: this.props.classroom.id\n    },\n    errors: {\n      title: validations.title()\n    },\n    touch: {},\n    show: false,\n    selectedOption: '',\n    selectedOption2: '',\n    options: [],\n    selectableOptions:[]\n  }\n\n  handleChange = (event) => {\n\n    const { name, value } = event.target;\n\n    this.setState({ \n      group: {\n        ...this.state.group,\n        [name]: value\n      },\n      errors: {\n        ...this.state.errors,\n        [name]: validations[name] && validations[name](value)\n      }\n    })\n  }\n\n  handleSubgroupSelect = (options, { name }) => {\n    const value = options.map(o => o.value)\n    this.setState({\n      group: {\n        ...this.state.group,\n        subgroups: {\n          ...this.state.group.subgroups,\n          [name]: value\n        }\n      }\n    }, () => {\n      let currentValues = [];\n      for (let subgroup of Object.values(this.state.group.subgroups)) {\n        currentValues = [\n          ...currentValues,\n          ...subgroup\n        ]\n      }\n      const filteredOptions = this.state.options.filter(option => \n        !currentValues.some(selected => option.value === selected)\n      )\n      this.setState({ selectableOptions: filteredOptions })\n    });\n  }\n\n  handleBLur = (event) => {\n    const { name } = event.target;\n  \n    this.setState({\n      ...this.state.touch,\n      [name]: true\n    })\n  }\n\n  handleAddSubgroup = () => {\n    const name = `group-${Object.keys(this.state.group.subgroups).length + 1}`\n    this.setState({\n      group: {\n        ...this.state.group,\n        subgroups: {\n          ...this.state.group.subgroups,\n          [name]: []\n        }\n      }\n    })\n  }\n\n  createGroup = (event) => {\n    event.preventDefault();\n    \n    const groupData = {\n      ...this.state.group\n    }\n    groupService.createClassroom(groupData)\n    .then(this.props.fetchGroups)\n    .then(this.setState({ show: false }))\n  }\n\n  handleClose = () => {this.setState({ show: false });}\n\n  handleShow = () => {this.setState({ show: true });}\n\n  componentDidMount(){\n    const opt = this.props.classroom.students\n      .map(student => { return { value: student.name, label: student.name } })\n    this.setState({\n      options: opt,\n      selectableOptions: opt \n    })\n  }\n\n  render() {\n    const { group, touch, errors, show } = this.state;\n    const subgroups = group.subgroups;\n\n    return(\n      <div>\n          <Button variant=\"outline-info new-classroom-btn\" onClick={this.handleShow}>+ New Group</Button>\n\n          <Modal show={show} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Create a new Group</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <form >\n                <div className=\"form-group\">\n                  <label htmlFor=\"nameGroup\">Group name</label>\n                  <input type=\"text\" \n                    className={`form-control form-control-sm ${touch.title ? (errors.title ? 'is-invalid' : 'is-valid') : ''}`} \n                    id=\"nameGroup\"\n                    value={group.title} \n                    onChange={this.handleChange}\n                    onBlur={this.handleBlur}\n                    name=\"title\"\n                    autoComplete=\"off\"\n                    />\n                </div>\n                <span className=\"btn-addSubgroup\" onClick={this.handleAddSubgroup}>+ Add Subgroup</span>\n                {Object.keys(subgroups).map(name =>\n                  (<Select\n                    className=\"mt-2\"\n                    key={name}\n                    name={name}\n                    value={subgroups['name']}\n                    onChange={this.handleSubgroupSelect}\n                    options={this.state.selectableOptions}\n                    isMulti\n                  />\n                  ))}\n              </form>\n            </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"info\" onClick={this.createGroup}>Create</Button>\n              </Modal.Footer>\n          </Modal>\n      </div>\n    )\n  }\n}\n\nexport default withAuthConsumer(NewGroup) ;"]},"metadata":{},"sourceType":"module"}